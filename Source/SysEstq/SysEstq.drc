/* VER150
  Generated by the Borland Delphi Pascal Compiler
  because -GD or --drc was supplied to the compiler.

  This file contains compiler-generated resources that
  were bound to the executable.
  If this file is empty, then no compiler-generated
  resources were bound to the produced executable.
*/

#define EstqArqSql_SqlFinanceAccounts 65328
#define EstqArqSql_SqlDeliveryPeriod 65329
#define EstqArqSql_SqlTipoAcabamentos 65330
#define EstqArqSql_SqlTipoReferencias 65331
#define EstqArqSql_SqlLinguagens 65332
#define EstqArqSql_SqlLangToInsert 65333
#define EstqArqSql_SqlTipoDescontos 65334
#define EstqArqSql_SqlDescontos 65335
#define EstqArqSql_SqlImpostos 65336
#define EstqArqSql_SqlClassFiscal 65337
#define EstqArqSql_SqlNatureOperation 65338
#define EstqArqSql_SqlOrigemTrb 65339
#define EstqArqSql_SqlSituacaoTrb 65340
#define EstqArqSql_SqlTipoDocumentos 65341
#define EstqArqSql_SqlRegions 65342
#define EstqArqSql_SqlDeleteProductSrv 65344
#define EstqArqSql_SqlInsertProductSrv 65345
#define EstqArqSql_SqlUpdateProductSrv 65346
#define EstqArqSql_SqlProductCarrier 65347
#define EstqArqSql_SqlDeleteProdCarrier 65348
#define EstqArqSql_SqlInsertProdCarrier 65349
#define EstqArqSql_SqlUpdateProdCarrier 65350
#define EstqArqSql_SqlGroupMovPurch 65351
#define EstqArqSql_SqlGenereteReference 65352
#define EstqArqSql_SqlCountCodes 65353
#define EstqArqSql_SqlRequisicoesItems 65354
#define EstqArqSql_SqlInsReqItems 65355
#define EstqArqSql_SqlLotacoes 65356
#define EstqArqSql_SqlInsLotacoes 65357
#define EstqArqSql_SqlLotacao 65358
#define EstqArqSql_SqlAlmoxLotacao 65359
#define EstqArqSql_SqlProdutosSaldos 65360
#define EstqArqSql_SqlProdCostHist 65361
#define EstqArqSql_SqlCompositions 65362
#define EstqArqSql_SqlInsumosComposicao 65363
#define EstqArqSql_SqlDelPrdInsumosComp 65364
#define EstqArqSql_SqlInsPrdInsumosComp 65365
#define EstqArqSql_SqlDelInsumosComp 65366
#define EstqArqSql_SqlDelInsumoComp 65367
#define EstqArqSql_SqlInsInsumosComp 65368
#define EstqArqSql_SqlUpdInsumosComp 65369
#define EstqArqSql_SqlInsertTipoCompo 65370
#define EstqArqSql_SqlUpdateTipoCompo 65371
#define EstqArqSql_SqlUpdateActiveTCompo 65372
#define EstqArqSql_SqlMaterials 65373
#define EstqArqSql_SqlActivity 65374
#define EstqArqSql_SqlProductService 65375
#define EstqArqSql_SqlInsertPrdSale 65376
#define EstqArqSql_SelectProductMargim 65377
#define EstqArqSql_SqlProductCustos 65378
#define EstqArqSql_SelectProductPrices 65379
#define EstqArqSql_SqlInsertPrdPrices 65380
#define EstqArqSql_SqlUpdatePrdPrices 65381
#define EstqArqSql_SqlDeletePrdPrices 65382
#define EstqArqSql_SqlInsertPrdCost 65383
#define EstqArqSql_SqlUpdatePrdCost 65384
#define EstqArqSql_SqlInsProdPurchase 65385
#define EstqArqSql_SqlUpdProdPurchase 65386
#define EstqArqSql_SqlDeletePrdSupplier 65387
#define EstqArqSql_SqlDeletePrdMargim 65388
#define EstqArqSql_SqlSelectPrdImpostos 65389
#define EstqArqSql_SqlInsertPrdImpostos 65390
#define EstqArqSql_SqlDeletePrdImpostos 65391
#define EstqArqSql_SqlInsertReqItems 65392
#define EstqArqSql_SqlVincTab 65393
#define EstqArqSql_SqlDeleteVincTab 65394
#define EstqArqSql_SqlInsertVincTab 65395
#define EstqArqSql_SqlSelectTabValues 65396
#define EstqArqSql_SqlDeleteProduto 65397
#define EstqArqSql_SqlUpdateProduto 65398
#define EstqArqSql_SqlInsertProduto 65399
#define EstqArqSql_SqlSelectDescrLang 65400
#define EstqArqSql_SqlInsertDescrLang 65401
#define EstqArqSql_SqlUpdateDescrLang 65402
#define EstqArqSql_SqlSelectPkPrdCode 65403
#define EstqArqSql_SqlDeletePrdCode 65404
#define EstqArqSql_SqlUpdatePrdCode 65405
#define EstqArqSql_SqlInsertPrdCode 65406
#define EstqArqSql_SqlUpdatePrdSale 65407
#define EstqArqSql_SqlSearchAllPrice 65408
#define EstqArqSql_SqlSearchMargem 65409
#define EstqArqSql_SqlSearchTax 65410
#define EstqArqSql_SqlTiposMovimTransf 65411
#define EstqArqSql_SqlTiposMovim 65412
#define EstqArqSql_SqlTipoMovim 65413
#define EstqArqSql_SqlDeleteTipoMovim 65414
#define EstqArqSql_SqlInsertTipoMovim 65415
#define EstqArqSql_SqlUpdateTipoMovim 65416
#define EstqArqSql_SqlProdMoviment 65417
#define EstqArqSql_SqlProdMovAlmox 65418
#define EstqArqSql_SqlProdMovOrder 65419
#define EstqArqSql_SqlProdMovimAlmox 65420
#define EstqArqSql_SqlProdutosReq 65421
#define EstqArqSql_SqlProdutosLotacoes 65422
#define EstqArqSql_SqlInsertProdLot 65423
#define EstqArqSql_SqlSearchProdutos1 65424
#define EstqArqSql_SqlSearchProdutos2 65425
#define EstqArqSql_SqlProdutoCod 65426
#define EstqArqSql_SqlProdutoVnd 65427
#define EstqArqSql_SqlProdPurchase 65428
#define EstqArqSql_SqlProdSuppliers 65429
#define EstqArqSql_SqlProdutoImg 65430
#define EstqArqSql_SqlPrdInsertImg 65431
#define EstqArqSql_SqlPrdUpdateImg 65432
#define EstqArqSql_SqlProdutoObs 65433
#define EstqArqSql_SqlPrdInsertObs 65434
#define EstqArqSql_SqlPrdUpdateObs 65435
#define EstqArqSql_SqlTipoFases 65436
#define EstqArqSql_SqlTabelaPrecos 65437
#define EstqArqSql_SqlPrecosProduto 65438
#define EstqArqSql_SqlSearchPrice 65439
#define EstqArqSql_SqlInsertTSitProd 65440
#define EstqArqSql_SqlUpdateTSitProd 65441
#define EstqArqSql_SqlProduto 65442
#define EstqArqSql_SqlProdutos 65443
#define EstqArqSql_SqlGetCfops 65444
#define EstqArqSql_SqlInsertCfops 65445
#define EstqArqSql_SqlDeleteCfops 65446
#define EstqArqSql_SqlTypeProducts 65447
#define EstqArqSql_SqlTypeProduct 65448
#define EstqArqSql_SqlDeleteTypeProduct 65449
#define EstqArqSql_SqlInsertTypeProduct 65450
#define EstqArqSql_SqlUpdateTypeProduct 65451
#define EstqArqSql_SqlInsertProd_X_Type 65452
#define EstqArqSql_SqlDeleteProd_X_Type 65453
#define EstqArqSql_SqlVinculoTProd 65454
#define EstqArqSql_SqlSearchProdutos0 65455
#define EstqArqSql_SqlDscTableRegion 65456
#define EstqArqSql_SqlTableRegion 65457
#define EstqArqSql_SqlDeleteTableRegion 65458
#define EstqArqSql_SqlInsertTableRegion 65459
#define EstqArqSql_SqlUpdateTableRegion 65460
#define EstqArqSql_SqlGetTableFraction 65461
#define EstqArqSql_SqlDeleteTableFract 65462
#define EstqArqSql_SqlInsertTableFract 65463
#define EstqArqSql_SqlSimilares 65464
#define EstqArqSql_SqlSimilar 65465
#define EstqArqSql_SqlDeleteSimilar 65466
#define EstqArqSql_SqlInsertSimilar 65467
#define EstqArqSql_SqlUpdateSimilar 65468
#define EstqArqSql_SqlTipoSitEstqs 65469
#define EstqArqSql_SqlTipoSitEstq 65470
#define EstqArqSql_SqlDeleteTSitProd 65471
#define EstqArqSql_SqlPriceTable 65472
#define EstqArqSql_SqlDeletePriceTable 65473
#define EstqArqSql_SqlInsertPriceTable 65474
#define EstqArqSql_SqlUpdatePriceTable 65475
#define EstqArqSql_SqlGenTypeFraction 65476
#define EstqArqSql_SqlTypeFractions 65477
#define EstqArqSql_SqlTypeFraction 65478
#define EstqArqSql_SqlDeleteTypeFraction 65479
#define EstqArqSql_SqlInsertTypeFraction 65480
#define EstqArqSql_SqlUpdateTypeFraction 65481
#define EstqArqSql_SqlTableFraction 65482
#define EstqArqSql_SqlDelTableFraction 65483
#define EstqArqSql_SqlInsTableFraction 65484
#define EstqArqSql_SqlUpdTableFraction 65485
#define EstqArqSql_SqlGenTableRegion 65486
#define EstqArqSql_SqlTableRegions 65487
#define EstqArqSql_SqlGroupAccounts 65488
#define EstqArqSql_SqlDeleteAccounts 65489
#define EstqArqSql_SqlInsertAccounts 65490
#define EstqArqSql_SqlAlmoxarifados 65491
#define EstqArqSql_SqlUnidades 65492
#define EstqArqSql_SqlUnidade 65493
#define EstqArqSql_SqlDeleteUnit 65494
#define EstqArqSql_SqlInsertUnit 65495
#define EstqArqSql_SqlUpdateUnit 65496
#define EstqArqSql_SqlLinhas 65497
#define EstqArqSql_SqlLinha 65498
#define EstqArqSql_SqlDeleteLinha 65499
#define EstqArqSql_SqlUpdateLinha 65500
#define EstqArqSql_SqlInsertLinha 65501
#define EstqArqSql_SqlTabPriceAndRegions 65502
#define EstqArqSql_SqlPriceTables 65503
#define EstqArqSql_SqlUpdateParamEstq 65504
#define EstqArqSql_SqlInsertParamEstq 65505
#define EstqArqSql_SqlSelectGroups 65506
#define EstqArqSql_SqlSelectGroup 65507
#define EstqArqSql_SqlGenPkGroup 65508
#define EstqArqSql_SqlDeleteGroup 65509
#define EstqArqSql_SqlInsertGroup 65510
#define EstqArqSql_SqlUpdateGroup 65511
#define EstqArqSql_SqlAlmoxarifado 65512
#define EstqArqSql_SqlDeleteProdRef 65513
#define EstqArqSql_SqlUpdateProdRef 65514
#define EstqArqSql_SqlInsertProdRef 65515
#define EstqArqSql_SqlDeleteAlmox 65516
#define EstqArqSql_SqlDeleteLotacao 65517
#define EstqArqSql_SqlUpdateLotacao 65518
#define EstqArqSql_SqlInsertLotacao 65519
#define EstqArqSql_SqlGenPkTipoMovim 65520
#define EstqArqSql_SqlGenPkTipoProd 65521
#define EstqArqSql_SqlGenPkUnit 65522
#define EstqArqSql_SqlGenPkAlmox 65523
#define EstqArqSql_SqlGenPkLine 65524
#define EstqArqSql_SqlGenPkTabPrice 65525
#define EstqArqSql_SqlGenPkSimilar 65526
#define EstqArqSql_SqlGenPkTypeSitSupply 65527
#define EstqArqSql_SqlGenPkLotacao 65528
#define EstqArqSql_SqlGetPkDocument 65529
#define EstqArqSql_SqlGetPkLotacao 65530
#define EstqArqSql_SqlGetNumberDocument 65531
#define EstqArqSql_SqlSelectPkProduto 65532
#define EstqArqSql_SqlAllEstqParams 65533
#define EstqArqSql_SqlParamEstq 65534
#define EstqArqSql_SqlDeleteParamEstq 65535
STRINGTABLE
BEGIN
	EstqArqSql_SqlFinanceAccounts,	"select * from STP_GET_FINANCEIRO_CONTAS \n\r where ((R_FLAG_TCTA = :FlagTCta) \n\r   or  ( -1          = :FlagTCta))"
	EstqArqSql_SqlDeliveryPeriod,	"select * from TIPO_PRAZO_ENTREGA \n\r order by DSC_PRZE"
	EstqArqSql_SqlTipoAcabamentos,	"select * from TIPO_ACABAMENTOS \n\r order by DSC_ACABM"
	EstqArqSql_SqlTipoReferencias,	"select * from TIPO_REFERENCIAS               \n\r where FK_TIPO_ACABAMENTOS = :FkTipoAcabamentos \n\r order by DSC_REF"
	EstqArqSql_SqlLinguagens,	"select * from LINGUAGENS \n\r order by DSC_LANG       "
	EstqArqSql_SqlLangToInsert,	"select Lng.PK_LINGUAGENS, Lng.DSC_LANG \n\r  from LINGUAGENS Lng \n\r where Lng.PK_LINGUAGENS not in (select FK_LINGUAGENS \n\r                                   from DESCRICOES_PRD_LANG Dcl \n\r                                  where Dcl.FK_PRODUTOS = :FkProduto) \n\r   and Lng.PK_LINGUAGENS <> (select FK_LINGUAGENS \n\r                               from PAISES \n\r                              where PK_PAISES = :FkPaises) \n\r order by DSC_LANG"
	EstqArqSql_SqlTipoDescontos,	"select * from TIPO_DESCONTOS \n\r where FK_GRUPOS_MOVIMENTOS = :FkGruposMovimentos \n\r order by DSC_TDSCT"
	EstqArqSql_SqlDescontos,	"select * from DESCONTOS                      \n\r where FK_TIPO_DESCONTOS = :Fk_Tipo_Descontos \n\r order by IDX_DSCT                           "
	EstqArqSql_SqlImpostos,	"select DSC_IMPS, PK_TIPO_IMPOSTOS, FLAG_CALC, \n\r       FLAG_IMPST, RED_BASC                   \n\r    from TIPO_IMPOSTOS order by DSC_IMPS      "
	EstqArqSql_SqlClassFiscal,	"select * from CLASSIFICACAO_FISCAL order by DSC_CLSF"
	EstqArqSql_SqlNatureOperation,	"select * from NATUREZA_OPERACOES order by COD_CFOP"
	EstqArqSql_SqlOrigemTrb,	"select * from ORIGENS_TRIBUTARIAS order by DSC_ORGM"
	EstqArqSql_SqlSituacaoTrb,	"select * from SITUACAO_TRIBUTARIAS order by DSC_IMPST"
	EstqArqSql_SqlTipoDocumentos,	"select * from TIPO_DOCUMENTOS \n\r where FLAG_TDOC in (0, 2, 4, 6, 7, 8) \n\r order by DSC_TDOC"
	EstqArqSql_SqlRegions,	"select * from CARGAS_REGIOES \n\r order by DSC_REG"
	EstqArqSql_SqlDeleteProductSrv,	"delete from PRODUTOS_SERVICOS \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlInsertProductSrv,	"insert into PRODUTOS_SERVICOS \n\r (FK_PRODUTOS, FLAG_ATV, VLR_UNIT) \n\rvalues \n\r (:FkProdutos, :FlagAtv, :VlrUnit)"
	EstqArqSql_SqlUpdateProductSrv,	"update PRODUTOS_SERVICOS set\n\r       FLAG_ATV    = :FlagAtv, \n\r       VLR_UNIT    = :VlrUnit \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlProductCarrier,	"select * from PRODUTOS_FRETES \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlDeleteProdCarrier,	"delete from PRODUTOS_FRETES \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlInsertProdCarrier,	"insert into PRODUTOS_FRETES \n\r (FK_PRODUTOS, FLAG_TP_FRE, FLAG_RDSP) \n\rvalues \n\r (:FkProdutos, :FlagTpFre, :FlagRdsp)"
	EstqArqSql_SqlUpdateProdCarrier,	"update PRODUTOS_FRETES set\n\r       FLAG_TP_FRE = :FlagTpFre, \n\r       FLAG_RDSP   = :FlagRdsp \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlGroupMovPurch,	"select PK_GRUPOS_MOVIMENTOS \n\r  from GRUPOS_MOVIMENTOS \n\r where FLAG_ES   = 0 \n\r   and FLAG_DEV  = 0 \n\r   and FLAG_ORGM = 1 \n\r   and FLAG_DSTI = 0 "
	EstqArqSql_SqlGenereteReference,	"select * from STP_GENERATE_REFERENCE(:FkProdutosGrupos)"
	EstqArqSql_SqlCountCodes,	"select Count(*) as QTD_ROWS from PRODUTOS_CODIGOS \n\r   where COD_REF = :CodRef \n\r     and FLAG_TCODE = 0"
	EstqArqSql_SqlRequisicoesItems,	"select Rqi.*, Cast('' as varchar(30)) as DSC_PROD, \n\r       Cast('' as varchar(30)) as DSC_UNI, \n\r       Lor.RUA_LOT as RUA_LOT_ORGM, Lor.NIVEL_LOT as NIVEL_LOT_ORGM, \n\r       Lor.BOX_LOT as BOX_LOT_ORGM, \n\r       Cast('' as varchar(30)) as DSC_LOT_ORGM, \n\r       Cast(0 as integer) as IcLotORGM, \n\r       Lds.RUA_LOT as RUA_LOT_DSTN, Lds.NIVEL_LOT as NIVEL_LOT_DSTN, \n\r       Lds.BOX_LOT as BOX_LOT_DSTN, \n\r       Cast('' as varchar(30)) as DSC_LOT_DSTN, \n\r       Cast(0 as integer) as IcLotDSTN \n\r  from REQUISICOES Req, REQUISICOES_ITEMS Rqi \n\r  left outer join LOTACOES Lor \n\r    on Lor.FK_EMPRESAS         = Rqi.FK_EMPRESAS \n\r   and Lor.PK_LOTACOES         = Rqi.FK_LOTACAO_ORGM \n\r   and Lor.FK_ALMOXARIFADOS    = Req.FK_ALMOXARIFADOS \n\r  left outer join LOTACOES Lds \n\r    on Lds.FK_EMPRESAS         = Rqi.FK_EMPRESAS \n\r   and Lds.PK_LOTACOES         = Rqi.FK_LOTACAO_DSTN \n\r   and Lds.FK_ALMOXARIFADOS    = Req.FK_ALMOXARIFADOS__DST \n\rwhere Req.FK_EMPRESAS          = :FkEmpresas \n\r  and Req.PK_REQUISICOES       = :FkRequisicoes \n\r  and Rqi.FK_EMPRESAS          = Req.FK_EMPRESAS \n\r  and Rqi.FK_REQUISICOES       = Req.PK_REQUISICOES \n\r  and Rqi.PK_REQUISICOES_ITEMS = :PkRequisicoesItems"
	EstqArqSql_SqlInsReqItems,	"insert into REQUISICOES_ITEMS \n\r  (FK_EMPRESAS, FK_REQUISICOES, PK_REQUISICOES_ITEMS, FK_PRODUTOS, \n\r   FK_LOTACAO_ORGM, FK_LOTACAO_DSTN, COD_PROD, QTD_ITM, STT_BXA) \n\rvalues \n\r  (:FkEmpresas, :FkRequisicoes, :PkRequisicoesItems, :FkProdutos, \n\r   :FkLotacaoOrgm, :FkLotacaoDstn, :CodProd, :QtdItm, :SttBxa)"
	EstqArqSql_SqlLotacoes,	"select * from LOTACOES \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_ALMOXARIFADOS = :FkAlmoxarifados \n\r   and RUA_LOT          = :RuaLot \n\r   and NIVEL_LOT        = :NivelLot \n\r   and BOX_LOT          = :BoxLot"
	EstqArqSql_SqlInsLotacoes,	"insert into LOTACOES \n\r  (FK_EMPRESAS, FK_ALMOXARIFADOS, RUA_LOT, \n\r   NIVEL_LOT, BOX_LOT) \n\rvalues \n\r  (:FkEmpresas, :FkAlmoxarifados, :RuaLot,  \n\r   :NivelLot, :BoxLot)"
	EstqArqSql_SqlLotacao,	"select * from LOTACOES \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_ALMOXARIFADOS = :FkAlmoxarifados \n\r   and PK_LOTACOES      = :PkLotacoes"
	EstqArqSql_SqlAlmoxLotacao,	"select Alm.*, Lot.PK_LOTACOES, Lot.RUA_LOT, Lot.NIVEL_LOT, \n\r       Lot.BOX_LOT \n\r  from ALMOXARIFADOS Alm \n\r  left outer join LOTACOES Lot \n\r    on Lot.FK_EMPRESAS      = :FkEmpresas \n\r   and Lot.FK_ALMOXARIFADOS = Alm.PK_ALMOXARIFADOS \n\r where Alm.PK_ALMOXARIFADOS > 0 \n\r order by DSC_ALMX, Lot.RUA_LOT, Lot.NIVEL_LOT, Lot.BOX_LOT"
	EstqArqSql_SqlProdutosSaldos,	"select Psl.*, Cad.RAZ_SOC, Tme.DSC_TMOV, \n\r       Tdc.DSC_TDOC \n\r  from PRODUTOS_SALDOS Psl \n\r  left outer join CADASTROS Cad \n\r    on Cad.PK_CADASTROS = Psl.FK_CADASTROS \n\r  left outer join TIPO_MOVIM_ESTQ Tme \n\r    on Tme.PK_TIPO_MOVIM_ESTQ = Psl.FK_TIPO_MOVIM_ESTQ \n\r  left outer join TIPO_DOCUMENTOS Tdc \n\r    on Tdc.PK_TIPO_DOCUMENTOS = Psl.FK_TIPO_DOCUMENTOS \n\r where Psl.FK_EMPRESAS = :FkEmpresas \n\r   and Psl.FK_PRODUTOS = :FkProdutos \n\r   and Psl.DTHR_SLD    > :DthrSldIni \n\r   and Psl.DTHR_SLD    < :DthrSldFin \n\r order by DTHR_SLD"
	EstqArqSql_SqlProdCostHist,	"select Pht.*, Cad.RAZ_SOC, \n\r       Ant.RAZ_SOC as RAZ_SOC_ANT \n\r  from PRODUTOS_HISTORICOS Pht \n\r  left outer join CADASTROS Cad \n\r    on Cad.PK_CADASTROS = Pht.FK_CADASTROS \n\r  left outer join CADASTROS Ant \n\r    on Ant.PK_CADASTROS = Pht.FK_CADASTROS_ANT \n\r where Pht.FK_EMPRESAS = :FkEmpresas \n\r   and Pht.FK_PRODUTOS = :FkProdutos \n\r   and Pht.DTHR_INC    > :DthrIncIni - 1 \n\r   and Pht.DTHR_INC    < :DthrIncFin + 1 \n\r order by Pht.DTHR_INC"
	EstqArqSql_SqlCompositions,	"select Tcp.DSC_COMP, Tcp.PK_TIPO_COMPOSICOES, \n\r       Tcp.FLAG_ATV \n\r  from PRODUTOS Prd, TIPO_COMPOSICOES Tcp \n\r where Prd.PK_PRODUTOS = :FkProdutos \n\r   and Tcp.FK_PRODUTOS = Prd.PK_PRODUTOS \n\r order by Tcp.DSC_COMP "
	EstqArqSql_SqlInsumosComposicao,	"select Prd.DSC_PROD, Cmp.* \n\r  from COMPOSICOES Cmp, PRODUTOS Prd \n\r where Cmp.FK_PRODUTOS         = :FkProdutos \n\r   and Cmp.FK_TIPO_COMPOSICOES = :FkTipoComposicoes \n\r   and Prd.PK_PRODUTOS         = Cmp.FK_INSUMOS \n\r order by SEQ_COMP "
	EstqArqSql_SqlDelPrdInsumosComp,	"delete from PRODUTOS_COMPOSICOES \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlInsPrdInsumosComp,	"insert into PRODUTOS_COMPOSICOES \n\r  (FK_PRODUTOS, PK_PRODUTOS_COMPOSICOES, FK_INSUMOS, \n\r   QTD_PROD, FLAG_TCOMP, SEQ_COMP, FLAG_DEF, MED_DEF) \n\r   select FK_PRODUTOS, 0, FK_INSUMOS, QTD_PROD, \n\r          FLAG_TCOMP, SEQ_COMP, FLAG_DEF, MED_DEF \n\r     from COMPOSICOES \n\r    where FK_PRODUTOS = :FkProdutos \n\r      and FK_TIPO_COMPOSICOES = :FkTipoComposicoes \n\r    order by SEQ_COMP "
	EstqArqSql_SqlDelInsumosComp,	"delete from COMPOSICOES \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and FK_TIPO_COMPOSICOES = :FkTipoComposicoes"
	EstqArqSql_SqlDelInsumoComp,	"delete from COMPOSICOES \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and FK_TIPO_COMPOSICOES = :FkTipoComposicoes\n\r   and PK_COMPOSICOES      = :PkComposicoes"
	EstqArqSql_SqlInsInsumosComp,	"insert into COMPOSICOES \n\r  (FK_PRODUTOS, FK_TIPO_COMPOSICOES, PK_COMPOSICOES, \n\r   FK_INSUMOS, QTD_PROD, FLAG_TCOMP, SEQ_COMP, \n\r   FLAG_DEF, MED_DEF) \n\rvalues \n\r  (:FkProdutos, :FkTipoComposicoes, :PkComposicoes, \n\r   :FkInsumos, :QtdProd, :FlagTComp, :SeqComp, \n\r   :FlagDef, :MedDef)"
	EstqArqSql_SqlUpdInsumosComp,	"update COMPOSICOES set \n\r       FK_PRODUTOS         = :FkProdutos, \n\r       FK_TIPO_COMPOSICOES = :FkTipoComposicoes, \n\r       FK_COMPOSICOES      = :PkComposicoes, \n\r       FK_INSUMOS          = :FkInsumos, \n\r       QTD_PROD            = :QtdProd, \n\r       FLAG_TCOMP          = :FlagTComp, \n\r       SEQ_COMP            = :SeqComp, \n\r       FLAG_DEF            = :FlagDef, \n\r       MED_DEF             = :MedDef \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and FK_TIPO_COMPOSICOES = :FkTipoComposicoes \n\r   and PK_COMPOSICOES      = :PkComposicoes"
	EstqArqSql_SqlInsertTipoCompo,	"insert into TIPO_COMPOSICOES \n\r  (FK_PRODUTOS, PK_TIPO_COMPOSICOES, DSC_COMP, FLAG_ATV) \n\rvalues \n\r  (:FkProdutos, :PkTipoComposicoes, :DscComp, :FlagAtv)"
	EstqArqSql_SqlUpdateTipoCompo,	"update TIPO_COMPOSICOES set \n\r       DSC_COMP = :DscComp, \n\r       FLAG_ATV = :FlagAtv \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and PK_TIPO_COMPOSICOES = :PkTipoComposicoes"
	EstqArqSql_SqlUpdateActiveTCompo,	"update TIPO_COMPOSICOES set \n\r       FLAG_ATV = :FlagAtv \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and PK_TIPO_COMPOSICOES = :PkTipoComposicoes"
	EstqArqSql_SqlMaterials,	"select * from VW_MATERIAL \n\r order by DSC_PROD"
	EstqArqSql_SqlActivity,	"select * from VW_ATIVIDADES \n\r order by DSC_PROD"
	EstqArqSql_SqlProductService,	"select * from PRODUTOS_SERVICOS \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlInsertPrdSale,	"insert into PRODUTOS_VENDAS \n\r  (FK_PRODUTOS, DSC_PROD_RED, FLAG_IMP, PES_BRU, \n\r   PES_LIQ, ALT_PROD, PROF_PROD, LARG_PROD, \n\r   ALT_EPROD, PROF_EPROD, LARG_EPROD, ALT_IPROD, \n\r   PROF_IPROD, LARG_IPROD, FAT_CONV_CUB, FK_LINHAS, \n\r   FK_SIMILARES) \n\rvalues \n\r  (:FkProdutos, :DscProdRed, :FlagImp, :PesBru, \n\r   :PesLiq, :AltProd, :ProfProd, :LargProd,  \n\r   :AltEProd, :ProfEProd, :LargEProd, :AltIProd, \n\r   :ProfIProd, :LargIProd, :FatConvCub, :FkLinhas, \n\r   :FkSimilares)"
	EstqArqSql_SelectProductMargim,	"select * from PRODUTOS_MARGEM \n\r where FK_PRODUTOS   = :FkProdutos \n\r   and ((FK_EMPRESAS = :FkEmpresas) \n\r    or ( 0           = :FkEmpresas))"
	EstqArqSql_SqlProductCustos,	"select Pct.*, Cad.RAZ_SOC \n\r  from PRODUTOS_CUSTOS Pct \n\r  left outer join CADASTROS Cad \n\r    on Cad.PK_CADASTROS = Pct.FK_VW_FORNECEDORES \n\r where Pct.FK_EMPRESAS = :FkEmpresas \n\r   and Pct.FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SelectProductPrices,	"select Tab.DSC_TAB, Emp.RAZ_SOC, Prp.PRE_VDA, \n\r       Prp.FLAG_FIX, Pmr.SIT_TRIB, Pmr.MRG_LCR, \n\r       Pmr.FK_CLASSIFICACAO_FISCAL, Emp.PK_EMPRESAS, \n\r       Pmr.FK_ORIGENS_TRIBUTARIAS, Prp.FK_PRODUTOS, \n\r       Pmr.FK_SITUACAO_TRIBUTARIAS, Tab.PK_TABELA_PRECOS, \n\r       Cast(3 as smallint) as STATUS \n\r  from TABELA_PRECOS Tab \n\r  left outer join  EMPRESAS Emp \n\r    on Emp.PK_EMPRESAS > 0 \n\r  left outer join PRODUTOS_MARGEM Pmr \n\r  left outer join PRODUTOS_PRECOS Prp \n\r    on Prp.FK_EMPRESAS      = Pmr.FK_EMPRESAS \n\r   and Prp.FK_PRODUTOS      = Pmr.FK_PRODUTOS \n\r   and Prp.FK_TABELA_PRECOS = Tab.PK_TABELA_PRECOS \n\r    on Pmr.FK_EMPRESAS      = Emp.PK_EMPRESAS \n\r   and Pmr.FK_PRODUTOS      = :FkProdutos \n\r where PK_TABELA_PRECOS     > 0 \n\r   and Tab.DTA_INI          <= current_date \n\r   and ((Tab.DTA_FIN        >= current_date) \n\r    or ( Tab.DTA_FIN        is null)) \n\r order by Tab.DSC_TAB, Emp.RAZ_SOC"
	EstqArqSql_SqlInsertPrdPrices,	"insert into PRODUTOS_PRECOS                    \n\r  (FK_EMPRESAS, FK_PRODUTOS, FK_TABELA_PRECOS, \n\r   PRE_VDA, FLAG_FIX)                          \n\rvalues                                         \n\r  (:FkEmpresas, :FkProdutos, :FkTabelaPrecos, :PreVda, :FlagFix)"
	EstqArqSql_SqlUpdatePrdPrices,	"update PRODUTOS_PRECOS set \n\r       PRE_VDA          = :PreVda, \n\r       FLAG_FIX         = :FlagFix \n\r where FK_EMPRESAS      = :FKEmpresas \n\r   and FK_PRODUTOS      = :FkProdutos \n\r   and FK_TABELA_PRECOS = :FkTabelaPrecos"
	EstqArqSql_SqlDeletePrdPrices,	"delete from PRODUTOS_PRECOS \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_PRODUTOS      = :FkProdutos \n\r   and FK_TABELA_PRECOS = :FkTabelaPrecos"
	EstqArqSql_SqlInsertPrdCost,	"insert into PRODUTOS_CUSTOS \n\r  (FK_EMPRESAS, FK_PRODUTOS, CUST_FINAL, \n\r   CUST_RJST, QTD_DIAS_REP, QTD_DIAS_ENTR, \n\r   FLAG_RJST, QTD_EMAX, QTD_EMIN, \n\r   DTA_PRV_ENTR_COMPRA, DTA_UCMP, DTA_UMOV) \n\rvalues \n\r  (:FkEmpresas, :FkProdutos, :CustFinal, \n\r   :CustRjst, :QtdDiasRep, :QtdDiasEntr, \n\r   :FlagRjst, :QtdEMax, :QtdEMin, \n\r   :DtaPrvEntrCompra, :DtaUCmp, :DtaUMov)"
	EstqArqSql_SqlUpdatePrdCost,	"update PRODUTOS_CUSTOS set \n\r       CUST_FINAL          = :CustFinal, \n\r       CUST_RJST           = :CustRjst, \n\r       QTD_DIAS_REP        = :QtdDiasRep, \n\r       QTD_DIAS_ENTR       = :QtdDiasEntr, \n\r       FLAG_RJST           = :FlagRjst, \n\r       QTD_EMAX            = :QtdEMax, \n\r       QTD_EMIN            = :QtdEMin, \n\r       DTA_UCMP            = :DtaUCmp, \n\r       DTA_UMOV            = :DtaUMov, \n\r       DTA_PRV_ENTR_COMPRA = :DtaPrvEntrCompra \n\r where FK_EMPRESAS         = :FkEmpresas \n\r   and FK_PRODUTOS         = :FkProdutos "
	EstqArqSql_SqlInsProdPurchase,	"insert into PRODUTOS_COMPRAS \n\r  (FK_PRODUTOS, VLR_UNIT, FLAG_EMP, \n\r   FLAG_CMPR, FLAG_TMAT, \n\r   FK_TIPO_ACABAMENTOS, \n\r   FK_TIPO_REFERENCIAS) \n\rvalues \n\r  (:FkProdutos, :VlrUnit, \n\r   :FlagEmp, :FlagCmpr, :FLagTMat, \n\r   :FkTipoAcabamentos, :FkTipoReferencias)"
	EstqArqSql_SqlUpdProdPurchase,	"update PRODUTOS_COMPRAS set \n\r       VLR_UNIT            = :VlrUnit, \n\r       FLAG_EMP            = :FlagEmp, \n\r       FLAG_CMPR           = :FlagCmpr, \n\r       FLAG_TMAT           = :FLagTMat, \n\r       FK_TIPO_ACABAMENTOS = :FkTipoAcabamentos, \n\r       FK_TIPO_REFERENCIAS = :FkTipoReferencias \n\r where FK_PRODUTOS         = :FkProdutos "
	EstqArqSql_SqlDeletePrdSupplier,	"delete from PRODUTOS_FORNECEDORES \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and FK_PRODUTOS        = :FkProdutos \n\r   and FK_VW_FORNECEDORES = :FkVwFornecedores"
	EstqArqSql_SqlDeletePrdMargim,	"delete from PRODUTOS_MARGEM \n\r where FK_EMPRESAS = :FkEmpresas \n\r   and FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlSelectPrdImpostos,	"select R_FK_EMPRESAS, R_DSC_IMPS, R_RAZ_SOC, \n\r       R_FK_TIPO_IMPOSTOS, R_FK_PRODUTOS, \n\r       Cast(3 as smallint) as STATUS \n\r  from STP_GET_ALL_TAXES_FROM_INSUMO(:FkProdutos)"
	EstqArqSql_SqlInsertPrdImpostos,	"insert into PRODUTOS_IMPOSTOS \n\r  (FK_EMPRESAS, FK_PRODUTOS, FK_TIPO_IMPOSTOS) \n\rvalues \n\r  (:FkEmpresas, :FkProdutos, :FkTipoImpostos)"
	EstqArqSql_SqlDeletePrdImpostos,	"delete from PRODUTOS_IMPOSTOS \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_PRODUTOS      = :FkProdutos \n\r   and FK_TIPO_IMPOSTOS = :FkTipoImpostos"
	EstqArqSql_SqlInsertReqItems,	"insert into REQUISICOES_ITEMS \n\r  (FK_EMPRESAS, FK_REQUISICOES, \n\r   PK_REQUISICOES_ITEMS, FK_MATERIAL, COD_PROD, \n\r   QTD_ITM) \n\rvalues \n\r  (:FkEmpresas, :FkRequisicoes, \n\r   :PkRequisicoesItems, :FkMaterial, \n\r   :CodProd, :QtdItm)"
	EstqArqSql_SqlVincTab,	"select PK_TABELA_PRECOS__VAL, FLAG_TOPE, \n\r       PK_TABELA_PRECOS__PRC \n\r  from VINC_TIPO_TABELA_PRECOS \n\r where PK_TABELA_PRECO_PRC = :TabPercent "
	EstqArqSql_SqlDeleteVincTab,	"delete from VINC_TIPO_TABELA_PRECOS \n\r where PK_TABELA_PRECO_PRC = :TabPercent "
	EstqArqSql_SqlInsertVincTab,	"insert into VINC_TIPO_TABELA_PRECOS \n\r  (PK_TABELA_PRECOS__PRC, PK_TABELA_PRECOS__VAL, \n\r   FLAG_TOPE ) \n\rvalues \n\r  (:PkTabelaPrecoPrc, :PkTabelaPrecosVal, :FlagTOpe)"
	EstqArqSql_SqlSelectTabValues,	"select * from TABELA_PRECOS \n\r where FLAG_TPRE = 1 \n\r   and DTA_INI   <= current_date \n\r   and DTA_FIN   >= current_date \n\r order by DSC_TAB "
	EstqArqSql_SqlDeleteProduto,	"delete from PRODUTOS \n\r where PK_PRODUTOS = :PkProdutos "
	EstqArqSql_SqlUpdateProduto,	"update PRODUTOS set \n\r       FK_PRODUTOS_GRUPOS = :FkProdutosGrupos, \n\r       FK_UNIDADES  = :FkUnidades, \n\r       DSC_PROD     = :DscProd, \n\r       FLAG_ATV     = :FlagAtv \n\r where PK_PRODUTOS  = :PkProdutos"
	EstqArqSql_SqlInsertProduto,	"insert into PRODUTOS \n\r  (FK_PRODUTOS_GRUPOS, FK_UNIDADES, \n\r   DSC_PROD, FLAG_ATV, PK_PRODUTOS) \n\rvalues \n\r  (:FkProdutosGrupos, :FkUnidades, \n\r   :DscProd, :FlagAtv, :PkProdutos)"
	EstqArqSql_SqlSelectDescrLang,	"select Dcl.*, Lng.DSC_LANG \n\r  from DESCRICOES_PRD_LANG Dcl, LINGUAGENS Lng \n\r where Dcl.FK_PRODUTOS = :FkProdutos \n\r   and Lng.PK_LINGUAGENS = Dcl.FK_LINGUAGENS "
	EstqArqSql_SqlInsertDescrLang,	"insert into DESCRICOES_PRD_LANG \n\r  (FK_LINGUAGENS, FK_PRODUTOS, DSC_PROD, DSC_PROD_RED \n\rvalues \n\r  (:FkLinguagens, :FkProdutos, :DscProd, :DscProdRed) "
	EstqArqSql_SqlUpdateDescrLang,	"update DESCRICOES_PRD_LANG set \n\r       DSC_PROD      = :DscProd, \n\r       DSC_PROD_RED  = :DscProdRed \n\r where FK_LINGUAGENS = :FkLinguagens \n\r   and FK_PRODUTOS   = :FkProdutos "
	EstqArqSql_SqlSelectPkPrdCode,	"select (MAX(PK_PRODUTOS_CODIGOS) + 1) \n\r    as PK_PRODUTOS_CODIGOS \n\r  from PRODUTOS_CODIGOS \n\r where FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SqlDeletePrdCode,	"delete from PRODUTOS_CODIGOS \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and PK_PRODUTOS_CODIGOS = :PkProdutosCodigos"
	EstqArqSql_SqlUpdatePrdCode,	"update PRODUTOS_CODIGOS set \n\r       COD_REF             = :CodRef, \n\r       FLAG_TCODE          = :FlagTCode, \n\r       FLAG_TBARCODE       = :FlagTBarCode, \n\r       DSC_CODE            = :DscCode \n\r where FK_PRODUTOS         = :FkProdutos \n\r   and PK_PRODUTOS_CODIGOS = :PkProdutosCodigos"
	EstqArqSql_SqlInsertPrdCode,	"insert into PRODUTOS_CODIGOS \n\r  (FK_PRODUTOS, PK_PRODUTOS_CODIGOS, COD_REF, \n\r   FLAG_TCODE, FLAG_TBARCODE, DSC_CODE) \n\rvalues \n\r  (:FkProdutos, :PkProdutosCodigos, :CodRef, \n\r   :FlagTCode, :FlagTBarCode, :DscCode)"
	EstqArqSql_SqlUpdatePrdSale,	"update PRODUTOS_VENDAS set \n\r       DSC_PROD_RED        = :DscProdRed, \n\r       FLAG_IMP            = :FlagImp, \n\r       PES_BRU             = :PesBru, \n\r       PES_LIQ             = :PesLiq, \n\r       ALT_PROD            = :AltProd, \n\r       PROF_PROD           = :ProfProd, \n\r       LARG_PROD           = :LargProd, \n\r       ALT_EPROD           = :AltEProd, \n\r       PROF_EPROD          = :ProfEProd, \n\r       LARG_EPROD          = :LargEProd, \n\r       ALT_IPROD           = :AltIProd, \n\r       PROF_IPROD          = :ProfIProd, \n\r       LARG_IPROD          = :LargIProd, \n\r       FAT_CONV_CUB        = :FatConvCub, \n\r       FK_LINHAS           = :FkLinhas, \n\r       FK_SIMILARES        = :FkSimilares \n\r where FK_PRODUTOS         = :FkProdutos "
	EstqArqSql_SqlSearchAllPrice,	"select  * from PRODUTOS_PRECOS     \n\r where FK_EMPRESAS      = :Empresa \n\r   and FK_PRODUTOS      = :Produto "
	EstqArqSql_SqlSearchMargem,	"select  * from PRODUTOS_MARGEM     \n\r where FK_EMPRESAS      = :Empresa \n\r   and FK_PRODUTOS      = :Produto "
	EstqArqSql_SqlSearchTax,	"select  * from PRODUTOS_IMPOSTOS    \n\r where FK_EMPRESAS      = :Empresa \n\r   and FK_PRODUTOS      = :Produto \n\r   and FK_TIPO_IMPOSTOS = :Imposto "
	EstqArqSql_SqlTiposMovimTransf,	"select * from TIPO_MOVIM_ESTQ \n\r where FLAG_ES = 0 \n\r   and FLAG_TBAIXA = 2 \n\r order by DSC_MOV"
	EstqArqSql_SqlTiposMovim,	"select * from TIPO_MOVIM_ESTQ \n\r where ((FLAG_TMOV = :FlagTMov) \n\r    or (-1         = :FlagTMov)) \n\r order by DSC_TMOV"
	EstqArqSql_SqlTipoMovim,	"select * from TIPO_MOVIM_ESTQ \n\r where PK_TIPO_MOVIM_ESTQ = :PkTipoMovimEstq "
	EstqArqSql_SqlDeleteTipoMovim,	"delete from TIPO_MOVIM_ESTQ \n\r where PK_TIPO_MOVIM_ESTQ = :PkTipoMovimEstq "
	EstqArqSql_SqlInsertTipoMovim,	"insert into TIPO_MOVIM_ESTQ \n\r  (PK_TIPO_MOVIM_ESTQ, FK_TIPO_MOVIM_ESTQ, DSC_TMOV, \n\r  FLAG_TBAIXA, FLAG_TMOV, FLAG_OPESTQ, FLAG_MVESTQ, \n\r  FLAG_OPRSRV, FLAG_MVRSRV, FLAG_OPGRNT, FLAG_MVGRNT, \n\r  FLAG_TCOD, FLAG_GENHST, FLAG_OPQRNT, FLAG_MVQRNT) \n\rvalues \n\r  (:PkTipoMovimEstq, :FkTipoMovimEstq, :DscTMov, \n\r   :FlagTBaixa, :FlagTMov, :FlagOpEstq, :FlagMvEstq, \n\r   :FlagOpRsrv, :FlagMvRsrv, :FlagOpGrnt, :FlagMvGrnt, \n\r   :FlagTCod, :FlagGenHst, :FlagOpQrnt, :FlagMvQrnt)"
	EstqArqSql_SqlUpdateTipoMovim,	"update TIPO_MOVIM_ESTQ set \n\r       FK_TIPO_MOVIM_ESTQ = :FkTipoMovimEstq, \n\r       DSC_TMOV           = :DscTMov, \n\r       FLAG_TBAIXA        = :FlagTBaixa, \n\r       FLAG_TMOV          = :FlagTMov, \n\r       FLAG_OPESTQ        = :FlagOpEstq, \n\r       FLAG_MVESTQ        = :FlagMvEstq, \n\r       FLAG_OPRSRV        = :FlagOpRsrv, \n\r       FLAG_MVRSRV        = :FlagMvRsrv, \n\r       FLAG_OPGRNT        = :FlagOpGrnt, \n\r       FLAG_MVGRNT        = :FlagMvGrnt, \n\r       FLAG_TCOD          = :FlagTCod, \n\r       FLAG_GENHST        = :FlagGenHst, \n\r       FLAG_OPQRNT        = :FlagOpQrnt, \n\r       FLAG_MVQRNT        = :FlagMvQrnt \n\r where PK_TIPO_MOVIM_ESTQ = :PkTipoMovimEstq"
	EstqArqSql_SqlProdMoviment,	"select Psa.DTHR_SLD, Psa.NUM_DOC, Psa.QTD_ENTRADA, Psa.QTD_SAIDA, \n\r       Psa.FLAG_TSLD, Psa.SLD_INS as QTD_SLD, Psa.FK_TIPO_MOVIM_ESTQ, \n\r       Tme.DSC_TMOV \n\r  from PRODUTOS_SALDOS Psa, TIPO_MOVIM_ESTQ Tme \n\r where Tme.PK_TIPO_MOVIM_ESTQ = Psa.FK_TIPO_MOVIM_ESTQ \n\r   and Psa.FK_EMPRESAS        = :FkEmpresas \n\r   and Psa.FK_PRODUTOS        = :FkProdutos "
	EstqArqSql_SqlProdMovAlmox,	"select Psa.DTHR_SLD, Psa.NUM_DOC, Psa.QTD_ENTRADA, Psa.QTD_SAIDA, \n\r       Psa.FLAG_TSLD, Psa.SLD_INS as QTD_SLD, Psa.FK_TIPO_MOVIM_ESTQ, \n\r       Tme.DSC_TMOV \n\r  from PRODUTOS_SALDO_ALMX Psa, TIPO_MOVIM_ESTQ Tme \n\r where Tme.PK_TIPO_MOVIM_ESTQ = Psa.FK_TIPO_MOVIM_ESTQ \n\r   and Psa.FK_EMPRESAS        = :FkEmpresas \n\r   and ((Psa.FK_ALMOXARIFADOS = :FkAlmoxarifados) \n\r    or (0                     = :FkAlmoxarifados)) \n\r   and Psa.FK_PRODUTOS        = :FkProdutos "
	EstqArqSql_SqlProdMovOrder,	" order by Psa.DTHR_SLD"
	EstqArqSql_SqlProdMovimAlmox,	"select Alm.DSC_ALMX, Alm.PK_ALMOXARIFADOS, Pet.FK_ALMOXARIFADOS, \n\r       Lot.RUA_LOT, Lot.NIVEL_LOT, Lot.BOX_LOT, \n\r       Pet.QTD_ESTQ, Pet.QTD_GRNT, Pet.QTD_RSRV, \n\r       Pet.QTD_ESTQ_QR, Plt.QTD_LOT, Pct.QTD_PEDF \n\r  from ALMOXARIFADOS Alm, PRODUTOS_CUSTOS Pct, \n\r       PRODUTOS_ESTOQUES Pet \n\r  left outer join PRODUTOS_LOTACOES Plt \n\r  left outer join LOTACOES Lot \n\r    on Lot.FK_EMPRESAS      = Plt.FK_EMPRESAS \n\r   and Lot.FK_ALMOXARIFADOS = Plt.FK_ALMOXARIFADOS \n\r   and Lot.PK_LOTACOES      = Plt.FK_LOTACOES \n\r    on Plt.FK_EMPRESAS      = Pet.FK_EMPRESAS \n\r   and Plt.FK_PRODUTOS      = Pet.FK_PRODUTOS \n\r   and Plt.FK_ALMOXARIFADOS = Pet.FK_ALMOXARIFADOS \n\r where Alm.PK_ALMOXARIFADOS = Pet.FK_ALMOXARIFADOS \n\r   and Pet.FK_EMPRESAS      = :FkEmpresas \n\r   and Pet.FK_PRODUTOS      = :FkProdutos \n\r   and Pct.FK_EMPRESAS      = Pet.FK_EMPRESAS \n\r   and Pct.FK_PRODUTOS      = Pet.FK_PRODUTOS \n\r order by Alm.DSC_ALMX, Alm.PK_ALMOXARIFADOS, Lot.RUA_LOT, \n\r          Lot.NIVEL_LOT, Lot.BOX_LOT"
	EstqArqSql_SqlProdutosReq,	"select Prd.PK_PRODUTOS, Prd.DSC_PROD, Pcd.COD_REF, \n\r       Uni.FLAG_FRAC, Uni.DSC_UNI, Prd.FLAG_ATV, \n\r       Ppc.MAJ_VER, Ppc.MIN_VER, Prd.FK_UNIDADES \n\r  from PRODUTOS Prd \n\r  join UNIDADES Uni \n\r    on Uni.PK_UNIDADES = Prd.FK_UNIDADES \n\r  join PRODUTOS_CODIGOS Pcd \n\r    on Pcd.FK_PRODUTOS = Prd.PK_PRODUTOS \n\r   and Pcd.FLAG_TCODE  = :TypeCode \n\r   and ((Pcd.COD_REF   = :CodRef) \n\r    or (cast('' as varchar(30)) = :CodRef)) \n\r  left outer join PRODUTOS_PECAS Ppc \n\r    on Ppc.FK_PRODUTOS = Prd.PK_PRODUTOS \n\r where Prd.FLAG_ATV    = 1"
	EstqArqSql_SqlProdutosLotacoes,	"select Lot.*, Plt.FK_LOTACOES \n\r  from LOTACOES Lot \n\r  left outer join PRODUTOS_LOTACOES Plt \n\r    on Plt.FK_LOTACOES      = Lot.PK_LOTACOES \n\r   and Plt.FK_PRODUTOS      = :FkProdutos \n\r   and Plt.FK_EMPRESAS      = Lot.FK_EMPRESAS \n\r   and Plt.FK_ALMOXARIFADOS = Lot.FK_ALMOXARIFADOS \n\r where Lot.RUA_LOT          = :RuaLot \n\r   and Lot.NIVEL_LOT        = :NivelLot \n\r   and Lot.BOX_LOT          = :BoxLot \n\r   and Lot.FK_EMPRESAS      = :FkEmpresas \n\r   and Lot.FK_ALMOXARIFADOS = :FkAlmoxarifados"
	EstqArqSql_SqlInsertProdLot,	"insert into PRODUTOS_LOTACOES \n\r  (FK_EMPRESAS, FK_PRODUTOS, FK_ALMOXARIFADOS, \n\r   FK_LOTACOES, QTD_LOT) \n\rvalues \n\r  (:FkEmpresas, :FkProdutos, :FkAlmoxarifados, \n\r   :FkLotacoes, :QtdLot)"
	EstqArqSql_SqlSearchProdutos1,	" where Prd.FLAG_ATV     = :FlagAtv "
	EstqArqSql_SqlSearchProdutos2,	" order by Prd.DSC_PROD"
	EstqArqSql_SqlProdutoCod,	"select * from PRODUTOS_CODIGOS \n\r where FK_PRODUTOS = :FkProdutos \n\r order by FLAG_TCODE, COD_REF"
	EstqArqSql_SqlProdutoVnd,	"select * from PRODUTOS_VENDAS \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlProdPurchase,	"select * from PRODUTOS_COMPRAS \n\r where FK_PRODUTOS = :FkProdutos "
	EstqArqSql_SqlProdSuppliers,	"select Pfr.*, Cad.RAZ_SOC, Uni.MNMO_UNI, \n\r       Tds.DSC_TDSCT \n\r  from PRODUTOS_FORNECEDORES Pfr \n\r  join CADASTROS Cad \n\r    on Cad.PK_CADASTROS = Pfr.FK_VW_FORNECEDORES \n\r  join UNIDADES Uni \n\r    on PK_UNIDADES = Pfr.FK_UNIDADES \n\r  left outer join TIPO_DESCONTOS Tds \n\r    on Tds.PK_TIPO_DESCONTOS = Pfr.FK_TIPO_DESCONTOS \n\r where Pfr.FK_EMPRESAS = :FkEmpresas \n\r   and Pfr.FK_PRODUTOS = :FkProdutos \n\r order by Cad.RAZ_SOC"
	EstqArqSql_SqlProdutoImg,	"select * from PRODUTOS_IMAGENS \n\r where FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SqlPrdInsertImg,	"insert into PRODUTOS_IMAGENS \n\r  (FK_PRODUTOS, FLAG_TIMG, IMG_PROD) \n\rvalues \n\r  (:FkProdutos, :FlagTImg, :ImgProd)"
	EstqArqSql_SqlPrdUpdateImg,	"update PRODUTOS_IMAGENS set \n\r       FLAG_TIMG   = :FlagTImg, \n\r       IMG_PROD    = :ImgProd \n\r where FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SqlProdutoObs,	"select * from PRODUTOS_CARACTERISTICAS \n\r where FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SqlPrdInsertObs,	"insert into PRODUTOS_CARACTERISTICAS \n\r (FK_PRODUTOS, CRT_PROD) \n\rvalues \n\r (:FkProdutos, :CrtProd)"
	EstqArqSql_SqlPrdUpdateObs,	"update PRODUTOS_CARACTERISTICAS set \n\r       CRT_PROD    = :CrtProd \n\r where FK_PRODUTOS = :FkProdutos"
	EstqArqSql_SqlTipoFases,	"select * from TIPO_FASES_PRODUCAO \n\r order by DSC_FASE                "
	EstqArqSql_SqlTabelaPrecos,	"select * from TABELA_PRECOS \n\r  where DTA_INI < current_date \n\r    and ((DTA_FIN > current_date) \n\r     or ( DTA_FIN is null)) \n\r  order by DSC_TAB"
	EstqArqSql_SqlPrecosProduto,	"select Tab.DSC_TAB, Pre.PRE_VDA, Prm.MRG_LCR,      \n\r       Prm.SIT_TRIB, Prm.FK_CLASSIFICACAO_FISCAL,  \n\r       Pre.FLAG_FIX, Tab.PK_TABELA_PRECOS          \n\r  from TABELA_PRECOS Tab                           \n\r  left outer join PRODUTOS_PRECOS Pre              \n\r    on Pre.FK_EMPRESAS  = :Empresa                 \n\r   and Pre.FK_PRODUTOS  = :Produto                 \n\r   and Pre.FK_TABELA_PRECOS = Tab.PK_TABELA_PRECOS \n\r  left outer join PRODUTOS_MARGEM Prm              \n\r    on Prm.FK_EMPRESAS  = :Empresa                 \n\r   and Prm.FK_PRODUTOS  = Pre.FK_PRODUTOS          \n\r order by Tab.DSC_TAB "
	EstqArqSql_SqlSearchPrice,	"select  * from PRODUTOS_PRECOS     \n\r where FK_EMPRESAS      = :Empresa \n\r   and FK_PRODUTOS      = :Produto \n\r   and FK_TABELA_PRECOS = :TabPreco"
	EstqArqSql_SqlInsertTSitProd,	"insert into TIPO_SITUACAO_ESTOQUES \n\r  (PK_TIPO_SITUACAO_ESTOQUES, DSC_TSE, FLAG_BLOQ) \n\rvalues \n\r  (:PkTipoSituacaoEstoques, :DscTse, :FlagBloq)"
	EstqArqSql_SqlUpdateTSitProd,	"update TIPO_SITUACAO_ESTOQUES set \n\r       DSC_TSE   = :DscTse, \n\r       FLAG_BLOQ = :FlagBloq \n\r where PK_TIPO_SITUACAO_ESTOQUES = :PkTipoSituacaoEstoques"
	EstqArqSql_SqlProduto,	"select Prd.*, Pgr.DSC_PGRU, Prf.COD_GREF, Prf.SEQ_REF, \n\r       Prf.COM_SGRU, Prf.DSCT_PROD, Prf.MRGM_REF, \n\r       Uni.DSC_UNI, Uni.MNMO_UNI \n\r  from PRODUTOS Prd, PRODUTOS_GRUPOS Pgr, \n\r       PRODUTOS_REFERENCIAS Prf, UNIDADES Uni \n\r where Prd.PK_PRODUTOS  = :PkProdutos \n\r   and Pgr.PK_PRODUTOS_GRUPOS = Prd.FK_PRODUTOS_GRUPOS \n\r   and Prf.FK_PRODUTOS_GRUPOS = Prd.FK_PRODUTOS_GRUPOS \n\r   and Uni.PK_UNIDADES  = Prd.FK_UNIDADES"
	EstqArqSql_SqlProdutos,	"select * from PRODUTOS \n\r order by DSC_PROD"
	EstqArqSql_SqlGetCfops,	"select Tcf.PK_TIPO_CFOP, Tcf.DSC_TMRC, \n\r       Nat.PK_NATUREZA_OPERACOES, Nat.COD_CFOP, \n\r       Nat.DSC_NTOP, Cast(-1 as smallint) as STATE, \n\r       Tpn.FK_TIPO_PRODUTOS \n\r  from TIPO_CFOP Tcf \n\r  join NATUREZA_OPERACOES Nat \n\r    on Nat.FK_TIPO_CFOP = Tcf.PK_TIPO_CFOP \n\r   and Nat.FK_FINANCEIRO_CONTAS is not null \n\r  left outer join TIPO_PRODUTOS_NATURE_OPER Tpn \n\r    on Tpn.FK_TIPO_PRODUTOS      = :FkTipoProdutos \n\r   and Tpn.FK_TIPO_CFOP          = Tcf.PK_TIPO_CFOP \n\r   and Tpn.FK_NATUREZA_OPERACOES = Nat.PK_NATUREZA_OPERACOES \n\r where Tcf.PK_TIPO_CFOP > 0 \n\r order by Tcf.PK_TIPO_CFOP, Nat.COD_CFOP"
	EstqArqSql_SqlInsertCfops,	"insert into TIPO_PRODUTOS_NATURE_OPER \n\r  (FK_TIPO_PRODUTOS, FK_TIPO_CFOP, FK_NATUREZA_OPERACOES) \n\rvalues \n\r  (:FkTipoProdutos, :FkTipoCfop, :FkNaturezaOperacoes)"
	EstqArqSql_SqlDeleteCfops,	"delete from TIPO_PRODUTOS_NATURE_OPER \n\r where FK_TIPO_PRODUTOS      = :FkTipoProdutos \n\r   and FK_TIPO_CFOP          = :FkTipoCfop \n\r   and FK_NATUREZA_OPERACOES = :FkNaturezaOperacoes"
	EstqArqSql_SqlTypeProducts,	"select * from TIPO_PRODUTOS \n\r order by DSC_TPRD"
	EstqArqSql_SqlTypeProduct,	"select * from TIPO_PRODUTOS \n\r where PK_TIPO_PRODUTOS = :PkTipoProdutos"
	EstqArqSql_SqlDeleteTypeProduct,	"delete from TIPO_PRODUTOS \n\r where PK_TIPO_PRODUTOS = :PkTipoProdutos"
	EstqArqSql_SqlInsertTypeProduct,	"insert into TIPO_PRODUTOS \n\r   (PK_TIPO_PRODUTOS, DSC_TPRD, FLAG_TPROD, \n\r    FK_FINANCEIRO_CONTAS_SAIDAS, FK_FINANCEIRO_CONTAS_ENTRADAS) \n\rvalues \n\r   (:PkTipoProdutos, :DscTPrd, :FlagTProd, \n\r    :FkFinanceiroContasSaidas, :FkFinanceiroContasEntradas"
	EstqArqSql_SqlUpdateTypeProduct,	"update TIPO_PRODUTOS set \n\r       DSC_TPRD   = :DscTPrd, \n\r       FLAG_TPROD = :FlagTProd, \n\r       FK_FINANCEIRO_CONTAS_SAIDAS = :FkFinanceiroContasSaidas, \n\r       FK_FINANCEIRO_CONTAS_ENTRADAS = :FkFinanceiroContasEntradas \n\r where PK_TIPO_PRODUTOS = :PkTipoProdutos"
	EstqArqSql_SqlInsertProd_X_Type,	"insert into PRODUTOS_TIPO_PRODUTOS \n\r  (FK_TIPO_PRODUTOS, FK_PRODUTOS) \n\rvalues \n\r  (:FkTipoProdutos, :FkProdutos)"
	EstqArqSql_SqlDeleteProd_X_Type,	"delete from PRODUTOS_TIPO_PRODUTOS \n\r where FK_TIPO_PRODUTOS = :FkTipoProdutos \n\r   and FK_PRODUTOS      = :FkProdutos "
	EstqArqSql_SqlVinculoTProd,	"select Tpr.DSC_TPRD, Tpr.FLAG_TPROD, \n\r       Tpr.PK_TIPO_PRODUTOS, Pxt.FK_PRODUTOS, \n\r       Cast(3 as smallint) as STATUS \n\r  from TIPO_PRODUTOS Tpr \n\r  left outer join PRODUTOS_TIPO_PRODUTOS Pxt \n\r    on Pxt.FK_TIPO_PRODUTOS = Tpr.PK_TIPO_PRODUTOS \n\r   and Pxt.FK_PRODUTOS      = :FkProdutos \n\r where Tpr.PK_TIPO_PRODUTOS > 0 \n\r order by Tpr.DSC_TPRD"
	EstqArqSql_SqlSearchProdutos0,	"select Prd.*, Pcd.COD_REF, Pcd.FLAG_TCODE, \n\r       Pim.IMG_PROD, Pim.FLAG_TIMG, \n\r       Pct.DTA_UCMP, Pct.DTA_UMOV, Ppr.PRE_VDA \n\r  from PRODUTOS Prd \n\r  left outer join PRODUTOS_IMAGENS Pim \n\r    on Pim.FK_PRODUTOS  = Prd.PK_PRODUTOS \n\r  left outer join PRODUTOS_CUSTOS Pct \n\r    on Pct.FK_EMPRESAS  = :FkEmpresas \n\r   and Pct.FK_PRODUTOS  = Prd.PK_PRODUTOS \n\r  left outer join PRODUTOS_PRECOS Ppr \n\r    on Ppr.FK_EMPRESAS  = :FkEmpresas \n\r   and Ppr.FK_PRODUTOS  = Prd.PK_PRODUTOS \n\r   and Ppr.FK_TABELA_PRECOS = :FkTabelaPrecos \n\r  join PRODUTOS_CODIGOS Pcd \n\r    on Pcd.FK_PRODUTOS  = Prd.PK_PRODUTOS \n\r   and ((Pcd.FLAG_TCODE = :FlagTCode) \n\r    or ( -1             = :FlagTCode))"
	EstqArqSql_SqlDscTableRegion,	"select Tod.PK_TABELA_ORIGEM_DESTINO, Org.REF_REG as DSC_ORGM, \n\r       Dst.REF_REG as DSC_DSTN \n\r  from TABELA_ORIGEM_DESTINO Tod, CARGAS_REGIOES Org, \n\r       CARGAS_REGIOES Dst \n\r where Tod.PK_TABELA_ORIGEM_DESTINO = :PkTabelaOrigemDestino \n\r   and Org.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__ORG \n\r   and Dst.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__DST \n\r order by Org.REF_REG, Dst.REF_REG"
	EstqArqSql_SqlTableRegion,	"select * from TABELA_ORIGEM_DESTINO \n\r where PK_TABELA_ORIGEM_DESTINO = :PkTabelaOrigemDestino"
	EstqArqSql_SqlDeleteTableRegion,	"delete from TABELA_ORIGEM_DESTINO \n\r where PK_TABELA_ORIGEM_DESTINO = :PkTabelaOrigemDestino"
	EstqArqSql_SqlInsertTableRegion,	"insert into TABELA_ORIGEM_DESTINO \n\r  (PK_TABELA_ORIGEM_DESTINO, FK_CARGAS_REGIOES__ORG, \n\r   FK_CARGAS_REGIOES__DST, FK_TIPO_PRAZO_ENTREGA, VLR_MIN) \n\rvalues \n\r  (:PkTabelaOrigemDestino, :FkCargasRegioesOrg, \n\r   :FkCargasRegioesDst, :FkTipoPrazoEntrega, :VlrMin)"
	EstqArqSql_SqlUpdateTableRegion,	"update TABELA_ORIGEM_DESTINO set \n\r       FK_CARGAS_REGIOES__ORG    = :FkCargasRegioesOrg, \n\r       FK_CARGAS_REGIOES__DST    = :FkCargasRegioesDst, \n\r       FK_TIPO_PRAZO_ENTREGA     = :FkTipoPrazoEntrega, \n\r       VLR_MIN                   = :VlrMin \n\r where PK_TABELA_ORIGEM_DESTINO = :PkCalculoOrigemDestino"
	EstqArqSql_SqlGetTableFraction,	"select * from TABELA_FRACOES \n\r where FK_TABELA_PRECOS         = :FkTabelaPrecos \n\r   and FK_TIPO_TABELA_FRACAO    = :FkTipoTabelaFracao \n\r   and FK_TABELA_ORIGEM_DESTINO = :FkTabelaOrigemDestino"
	EstqArqSql_SqlDeleteTableFract,	"delete from TABELA_FRACOES \n\r where FK_TABELA_PRECOS         = :FkTabelaPrecos \n\r   and FK_TIPO_TABELA_FRACAO    = :FkTipoTabelaFracao \n\r   and FK_TABELA_ORIGEM_DESTINO = :FkTabelaOrigemDestino"
	EstqArqSql_SqlInsertTableFract,	"insert into TABELA_FRACOES \n\r  (FK_TABELA_PRECOS, FK_TIPO_TABELA_FRACAO, \n\r   FK_TABELA_ORIGEM_DESTINO, PK_TABELA_FRACOES, \n\r   VLR_INI, VLR_FIN, VLR_IDX, FLAG_MFINAL, \n\r   PERC_ADV, TAX_TAB) \n\rvalues \n\r  (:FkTabelaPrecos, :FkTipoTabelaFracao, \n\r   :FkTabelaOrigemDestino, :PkTabelaFracoes, \n\r   :VlrIni, :VlrFin, :VlrIdx, :FlagMFinal, \n\r   :PercAdv, :TaxTab)"
	EstqArqSql_SqlSimilares,	"select * from SIMILARES \n\r order by DSC_SIM"
	EstqArqSql_SqlSimilar,	"select * from SIMILARES \n\r where PK_SIMILARES = :PkSimilares"
	EstqArqSql_SqlDeleteSimilar,	"delete from SIMILARES \n\r where PK_SIMILARES = :PkSimilares"
	EstqArqSql_SqlInsertSimilar,	"insert into SIMILARES \n\r  (PK_SIMILARES, DSC_SIM) \n\rvalues \n\r  (:PkSimilares, :DscSim)"
	EstqArqSql_SqlUpdateSimilar,	"update SIMILARES set \n\r       DSC_SIM      = :DscSim \n\r where PK_SIMILARES = :PkSimilares"
	EstqArqSql_SqlTipoSitEstqs,	"select * from TIPO_SITUACAO_ESTOQUES \n\r order by DSC_TSE"
	EstqArqSql_SqlTipoSitEstq,	"select * from TIPO_SITUACAO_ESTOQUES \n\r where PK_TIPO_SITUACAO_ESTOQUES = :PkTipoSituacaoEstoques"
	EstqArqSql_SqlDeleteTSitProd,	"delete from TIPO_SITUACAO_ESTOQUES \n\r where PK_TIPO_SITUACAO_ESTOQUES = :PkTipoSituacaoEstoques"
	EstqArqSql_SqlPriceTable,	"select * from TABELA_PRECOS \n\r where PK_TABELA_PRECOS = :PkTabelaPrecos"
	EstqArqSql_SqlDeletePriceTable,	"delete from TABELA_PRECOS \n\r where PK_TABELA_PRECOS = :PkTabelaPrecos "
	EstqArqSql_SqlInsertPriceTable,	"insert into TABELA_PRECOS \n\r  (PK_TABELA_PRECOS, DSC_TAB, DTA_INI, DTA_FIN, \n\r   FLAG_DEFTAB, PERC_DSCT) \n\rvalues \n\r  (:PkTabelaPrecos, :DscTab, :DtaIni, :DtaFin, \n\r   :FlagDefTab, :PercDsct)"
	EstqArqSql_SqlUpdatePriceTable,	"update TABELA_PRECOS set \n\r       DSC_TAB          = :DscTab, \n\r       DTA_INI          = :DtaIni, \n\r       DTA_FIN          = :DtaFin, \n\r       FLAG_DEFTAB      = :FlagDefTab,\n\r       PERC_DSCT        = :PercDsct \n\r where PK_TABELA_PRECOS = :PkTabelaPrecos"
	EstqArqSql_SqlGenTypeFraction,	"select R_PK_TIPO_TABELA_FRACAO as PK_TIPO_TABELA_FRACAO \n\r  from STP_GET_PK_TIPO_TABELA_FRACAO"
	EstqArqSql_SqlTypeFractions,	"select * from TIPO_TABELA_FRACAO \n\r order by DSC_TAB"
	EstqArqSql_SqlTypeFraction,	"select * from TIPO_TABELA_FRACAO \n\r where PK_TIPO_TABELA_FRACAO = :PkTipoTabelaFracao"
	EstqArqSql_SqlDeleteTypeFraction,	"delete from TIPO_TABELA_FRACAO \n\r where PK_TIPO_TABELA_FRACAO = :PkTipoTabelaFracao"
	EstqArqSql_SqlInsertTypeFraction,	"insert into TIPO_TABELA_FRACAO \n\r  (PK_TIPO_TABELA_FRACAO, DSC_TAB, FLAG_TIPO) \n\rvalues \n\r  (:PkTipoTabelaFracao, :DscTab, :FlagTipo)"
	EstqArqSql_SqlUpdateTypeFraction,	"update TIPO_TABELA_FRACAO set \n\r       DSC_TAB               = :DscTab, \n\r       FLAG_TIPO             = :FlagTipo \n\r where PK_TIPO_TABELA_FRACAO = :PkTipoTabelaFracao"
	EstqArqSql_SqlTableFraction,	"select * from TABELA_TRANSPORTES \n\r where FK_TABELA_PRECOS         = :FkTabelaPrecos \n\r   and FK_TIPO_TABELA_FRACAO    = :FkTipoTabelaFracao \n\r   and FK_TABELA_ORIGEM_DESTINO = :FkTabelaOrigemDestino"
	EstqArqSql_SqlDelTableFraction,	"delete from TABELA_TRANSPORTES \n\r where FK_TABELA_PRECOS         = :FkTabelaPrecos \n\r   and FK_TIPO_TABELA_FRACAO    = :FkTipoTabelaFracao \n\r   and FK_TABELA_ORIGEM_DESTINO = :FkTabelaOrigemDestino"
	EstqArqSql_SqlInsTableFraction,	"insert into TABELA_TRANSPORTES \n\r  (FK_TABELA_PRECOS, FK_TIPO_TABELA_FRACAO, \n\r   FK_TABELA_ORIGEM_DESTINO, FLAG_VEXD, VLR_EXD, \n\r   PERC_GRIS, VLR_MIN_GRIS, DIV_PED, VLR_PED, \n\r   FLAG_TPOPER) \n\rvalues \n\r  (:FkTabelaPrecos, :FkTipoTabelaFracao, \n\r   :FkTabelaOrigemDestino, :FlagVExd, :VlrExd, \n\r   :PercGris, :VlrMinGris, :DivPed, :Vlr_Ped, \n\r   :FlagTpOper)"
	EstqArqSql_SqlUpdTableFraction,	"update TABELA_TRANSPORTES set \n\r       FLAG_VEXD                = :FlagVExd, \n\r       VLR_EXD                  = :VlrExd, \n\r       PERC_GRIS                = :PercGris, \n\r       VLR_MIN_GRIS             = :VlrMinGris, \n\r       DIV_PED                  = :DivPed, \n\r       VLR_PED                  = :Vlr_Ped, \n\r       FLAG_TPOPER              = :FlagTpOper \n\r where FK_TABELA_PRECOS         = :FkTabelaPrecos \n\r   and FK_TIPO_TABELA_FRACAO    = :FkTipoTabelaFracao \n\r   and FK_TABELA_ORIGEM_DESTINO = :FkTabelaOrigemDestino"
	EstqArqSql_SqlGenTableRegion,	"select R_PK_TABELA_ORIGEM_DESTINO as PK_TABELA_ORIGEM_DESTINO \n\r  from STP_GET_PK_ORIGEM_DESTINO"
	EstqArqSql_SqlTableRegions,	"select Tod.*, Cast(Org.REF_REG || ' ==> ' || \n\r       Dst.REF_REG as varchar(100)) as DSC_ORDS \n\r  from TABELA_ORIGEM_DESTINO Tod, CARGAS_REGIOES Org, \n\r       CARGAS_REGIOES Dst \n\r where Dst.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__DST \n\r   and Org.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__ORG \n\r order by Org.REF_REG, Dst.REF_REG"
	EstqArqSql_SqlGroupAccounts,	"select Pct.FK_PRODUTOS_GRUPOS, Nat.FK_TIPO_CFOP, \n\r       Nat.PK_NATUREZA_OPERACOES, Nat.DSC_NTOP, \n\r       Nat.COD_CFOP, Fin.PK_FINANCEIRO_CONTAS, \n\r       Fin.MASK_CTA, Fin.DSC_CTA, Fin.FLAG_TCTA, \n\r       Cast(3 as Integer) as ROW_STATE \n\r  from PRODUTOS_CONTAS Pct, NATUREZA_OPERACOES Nat, \n\r       FINANCEIRO_CONTAS Fin \n\r where Pct.FK_PRODUTOS_GRUPOS    = :FkProdutosGrupos \n\r   and Nat.FK_TIPO_CFOP          = Pct.FK_TIPO_CFOP \n\r   and Nat.PK_NATUREZA_OPERACOES = Pct.FK_NATUREZA_OPERACOES \n\r   and Fin.PK_FINANCEIRO_CONTAS  = Pct.FK_FINANCEIRO_CONTAS \n\r order by Fin.MASK_CTA, Nat.COD_CFOP"
	EstqArqSql_SqlDeleteAccounts,	"delete from PRODUTOS_CONTAS \n\r where FK_PRODUTOS_GRUPOS = :FkProdutosGrupos"
	EstqArqSql_SqlInsertAccounts,	"insert into PRODUTOS_CONTAS \n\r  (FK_PRODUTOS_GRUPOS, FK_TIPO_CFOP, \n\r   FK_NATUREZA_OPERACOES, FK_FINANCEIRO_CONTAS) \n\rvalues \n\r  (:FkProdutosGrupos, :FkTipoCfop, \n\r   :FkNaturezaOperacoes, :FkFinanceiroContas)"
	EstqArqSql_SqlAlmoxarifados,	"select * from ALMOXARIFADOS \n\r order by DSC_ALMX"
	EstqArqSql_SqlUnidades,	"select * from UNIDADES \n\r order by DSC_UNI"
	EstqArqSql_SqlUnidade,	"select * from UNIDADES \n\r where PK_UNIDADES = :PkUnidades"
	EstqArqSql_SqlDeleteUnit,	"delete from UNIDADES \n\r where PK_UNIDADES = :PkUnidades"
	EstqArqSql_SqlInsertUnit,	"insert into UNIDADES \n\r  (PK_UNIDADES, DSC_UNI, MNMO_UNI, FLAG_FRAC, \n\r   FLAG_ALT, FLAG_LARG, FLAG_COMP, FLAG_QTD, \n\r   FLAG_FUNI, FLAG_TUNI) \n\rvalues \n\r  (:PkUnidades, :DscUni, :MnmoUni, :FlagFrac,  \n\r   :FlagAlt, :FlagLarg, :FlagComp, :FlagQtd, \n\r   :FlagFUni, :FlagTUni)"
	EstqArqSql_SqlUpdateUnit,	"update UNIDADES set \n\r       DSC_UNI   = :DscUni, \n\r       MNMO_UNI  = :MnmoUni, \n\r       FLAG_FRAC = :FlagFrac, \n\r       FLAG_ALT  = :FlagAlt, \n\r       FLAG_LARG = :FlagLarg, \n\r       FLAG_COMP = :FlagComp, \n\r       FLAG_QTD  = :FlagQtd, \n\r       FLAG_FUNI = :FlagFUni, \n\r       FLAG_TUNI = :FlagTUni \n\r where PK_UNIDADES = :PkUnidades"
	EstqArqSql_SqlLinhas,	"select * from LINHAS \n\r order by DSC_LIN"
	EstqArqSql_SqlLinha,	"select * from LINHAS \n\r where PK_LINHAS = :PkLinhas"
	EstqArqSql_SqlDeleteLinha,	"delete from LINHAS \n\r where PK_LINHAS = :PkLinhas"
	EstqArqSql_SqlUpdateLinha,	"update LINHAS set \n\r       DSC_LIN           = :DscLin, \n\r       FK_TIPO_COMISSOES = :FkTipoComissoes \n\r where PK_LINHAS         = :PkLinhas"
	EstqArqSql_SqlInsertLinha,	"insert into LINHAS \n\r  (PK_LINHAS, DSC_LIN, FK_TIPO_COMISSOES) \n\rvalues \n\r  (:PkLinhas, :DscLin, :FkTipoComissoes)"
	EstqArqSql_SqlTabPriceAndRegions,	"select Tab.PK_TABELA_PRECOS, Tab.DSC_TAB, Tab.DTA_INI, \n\r       Tab.DTA_FIN, Tab.FLAG_DEFTAB, Tab.PERC_DSCT, \n\r       Tfr.PK_TIPO_TABELA_FRACAO, Tfr.DSC_TAB as DSC_FRAC, \n\r       Tfr.FLAG_TIPO, Tod.PK_TABELA_ORIGEM_DESTINO, \n\r       Org.REF_REG as REF_ORG, Dst.REF_REG as REF_DST \n\r  from TABELA_PRECOS Tab \n\r  left outer join TABELA_TRANSPORTES Ttr \n\r    on Ttr.FK_TABELA_PRECOS = Tab.PK_TABELA_PRECOS \n\r  left outer join TIPO_TABELA_FRACAO Tfr \n\r    on Tfr.PK_TIPO_TABELA_FRACAO = Ttr.FK_TIPO_TABELA_FRACAO \n\r  left outer join TABELA_ORIGEM_DESTINO Tod \n\r    on Tod.PK_TABELA_ORIGEM_DESTINO = Ttr.FK_TABELA_ORIGEM_DESTINO \n\r  left outer join CARGAS_REGIOES Org \n\r    on Org.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__ORG \n\r  left outer join CARGAS_REGIOES Dst \n\r    on Dst.PK_CARGAS_REGIOES = Tod.FK_CARGAS_REGIOES__DST \n\r order by Tab.DSC_TAB, Tfr.DSC_TAB, Org.REF_REG, Dst.REF_REG"
	EstqArqSql_SqlPriceTables,	"select * from TABELA_PRECOS \n\r order by DSC_TAB "
	EstqArqSql_SqlUpdateParamEstq,	"update PARAMETROS_ESTQ set \n\r       FK_ALMOXARIFADOS         = :FkAlmoxarifados, \n\r       FK_TIPO_MOVIM_ESTQ__ENTR = :FkTipoMovmEstqEntr, \n\r       FK_TIPO_MOVIM_ESTQ__SAI  = :FkTipoMovmEstqSai, \n\r       FK_TABELA_PRECOS         = :FkTabelaPrecos, \n\r       FLAG_TMRGM               = :FlagTMrgm, \n\r       FLAG_TCUSTO              = :FlagTCusto, \n\r       FLAG_TACABM              = :FlagTAcabm, \n\r       MRG_DEF                  = :MrgDef \n\r where FK_EMPRESAS = :FkEmpresas"
	EstqArqSql_SqlInsertParamEstq,	"insert into PARAMETROS_ESTQ \n\r  (FK_EMPRESAS, FK_ALMOXARIFADOS, FK_TIPO_MOVIM_ESTQ__ENTR, \n\r   FK_TIPO_MOVIM_ESTQ__SAI, FK_TABELA_PRECOS, FLAG_TMRGM, \n\r   FLAG_TCUSTO, FLAG_TACABM, MRG_DEF) \n\rvalues \n\r  (:FkEmpresas, :FkAlmoxarifados, :FkTipoMovmEstqEntr, \n\r   :FkTipoMovmEstqSai, :FkTabelaPrecos, :FlagTMrgm, \n\r   :FlagTCusto, :FlagTAcabm, :MrgDef)"
	EstqArqSql_SqlSelectGroups,	"select * from STP_GET_PRODUCT_GROUPS"
	EstqArqSql_SqlSelectGroup,	"select Pgr.PK_PRODUTOS_GRUPOS, Pgr.FK_PRODUTOS_GRUPOS, \n\r       Pgr.DSC_PGRU, Pgr.SEQ_CLASS, Pgr.LEV_CLASS, \n\r       Pgr.MASK_CLASS, Pgr.FLAG_LAST_LEVEL, Prf.DSCT_PROD, \n\r       Prf.MRGM_REF, Prf.COM_SGRU, Prf.COD_GREF, Prf.SEQ_REF \n\r from  PRODUTOS_GRUPOS Pgr \n\r  left outer join PRODUTOS_REFERENCIAS Prf \n\r    on Prf.FK_PRODUTOS_GRUPOS = Pgr.PK_PRODUTOS_GRUPOS \n\r where Pgr.PK_PRODUTOS_GRUPOS = :PkProdutosGrupos"
	EstqArqSql_SqlGenPkGroup,	"select R_PK_PRODUTOS_GRUPOS as PK_PRODUTOS_GRUPOS \n\r  from STP_GET_PK_PRODUTOS_GRUPOS"
	EstqArqSql_SqlDeleteGroup,	"delete from PRODUTOS_GRUPOS \n\r where PK_PRODUTOS_GRUPOS = :PkProdutosGrupos"
	EstqArqSql_SqlInsertGroup,	"insert into PRODUTOS_GRUPOS  \n\r  (PK_PRODUTOS_GRUPOS, FK_PRODUTOS_GRUPOS, DSC_PGRU, \n\r   SEQ_CLASS, LEV_CLASS, MASK_CLASS, FLAG_LAST_LEVEL) \n\rvalues \n\r  (:PkProdutosGrupos, :FkProdutosGrupos, :DscPGru, \n\r   :SeqClass, :LevClass, :MaskClass, :FlagLastLevel)"
	EstqArqSql_SqlUpdateGroup,	"update PRODUTOS_GRUPOS set \n\r       DSC_PGRU           = :DscPGru, \n\r       SEQ_CLASS          = :SeqClass, \n\r       LEV_CLASS          = :LevClass, \n\r       MASK_CLASS         = :MaskClass, \n\r       FLAG_LAST_LEVEL    = :FlagLastLevel \n\r where PK_PRODUTOS_GRUPOS = :PkProdutosGrupos"
	EstqArqSql_SqlAlmoxarifado,	"select * from ALMOXARIFADOS \n\r where PK_ALMOXARIFADOS = :PkAlmoxarifados \n\r order by DSC_ALMX"
	EstqArqSql_SqlDeleteProdRef,	"delete from PRODUTOS_REFERENCIAS \n\r where FK_PRODUTOS_GRUPOS = :FkProdutosGrupos"
	EstqArqSql_SqlUpdateProdRef,	"update PRODUTOS_REFERENCIAS set \n\r       DSCT_PROD = :DsctProd, \n\r       MRGM_REF  = :MrgmRef, \n\r       COM_SGRU  = :ComSGru, \n\r       COD_GREF  = :CodGRef, \n\r       SEQ_REF   = :SeqRef \n\r where FK_PRODUTOS_GRUPOS = :FkProdutosGrupos"
	EstqArqSql_SqlInsertProdRef,	"insert into PRODUTOS_REFERENCIAS \n\r  (FK_PRODUTOS_GRUPOS, DSCT_PROD, MRGM_REF, \n\r   COM_SGRU, COD_GREF, SEQ_REF) \n\rvalues \n\r  (:FkProdutosGrupos, :DsctProd, :MrgmRef, \n\r   :ComSGru, :CodGRef, :SeqRef)"
	EstqArqSql_SqlDeleteAlmox,	"delete from ALMOXARIFADOS \n\r where PK_ALMOXARIFADOS = :PkAlmoxarifados"
	EstqArqSql_SqlDeleteLotacao,	"delete from LOTACOES \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_ALMOXARIFADOS = :FkAlmoxarifados \n\r   and PK_LOTACOES      = :PkLotacoes"
	EstqArqSql_SqlUpdateLotacao,	"update LOTACOES set \n\r       RUA_LOT          = :RuaLot, \n\r       NIVEL_LOT        = :NivelLot, \n\r       BOX_LOT          = :BoxLot \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_ALMOXARIFADOS = :FkAlmoxarifados \n\r   and PK_LOTACOES      = :PkLotacoes"
	EstqArqSql_SqlInsertLotacao,	"insert into LOTACOES  \n\r  (RUA_LOT, NIVEL_LOT, BOX_LOT, FK_EMPRESAS, \n\r   FK_ALMOXARIFADOS, PK_LOTACOES) \n\rvalues \n\r  (:RuaLot, :NivelLot, :BoxLot, :FkEmpresas, \n\r   :FkAlmoxarifados, :PkLotacoes)"
	EstqArqSql_SqlGenPkTipoMovim,	"select R_PK_TIPO_MOVIM_ESTQ as PK_TIPO_MOVIM_ESTQ \n\r  from STP_GET_PK_TIPO_MOVIM_ESTQ"
	EstqArqSql_SqlGenPkTipoProd,	"select R_PK_TIPO_PRODUTOS as PK_TIPO_PRODUTOS \n\r  from STP_GET_PK_TIPO_PRODUTOS"
	EstqArqSql_SqlGenPkUnit,	"select R_PK_UNIDADES as PK_UNIDADES \n\r  from STP_GET_PK_UNIDADES"
	EstqArqSql_SqlGenPkAlmox,	"select R_PK_ALMOXARIFADOS as PK_ALMOXARIFADOS \n\r  from STP_GET_PK_ALMOXARIFADOS"
	EstqArqSql_SqlGenPkLine,	"select R_PK_LINHAS as PK_LINHAS \n\r  from STP_GET_PK_LINHAS"
	EstqArqSql_SqlGenPkTabPrice,	"select R_PK_TABELA_PRECOS as PK_TABELA_PRECOS \n\r  from STP_GET_PK_TABELA_PRECOS"
	EstqArqSql_SqlGenPkSimilar,	"select R_PK_SIMILARES as PK_SIMILARES \n\r  from STP_GET_PK_SIMILARES"
	EstqArqSql_SqlGenPkTypeSitSupply,	"select R_PK_TIPO_SITUACAO_ESTOQUES as PK_TIPO_SITUACAO_ESTOQUES \n\r  from STP_GET_PK_TIPO_SITUACAO_ESTOQUES"
	EstqArqSql_SqlGenPkLotacao,	"select R_PK_LOTACOES as PK_LOTACOES \n\r  from STP_GET_PK_LOTACOES(:FkEmpresas, :FkAlmoxarifados)"
	EstqArqSql_SqlGetPkDocument,	"select R_PK_DOCUMENT from STP_GET_PK_DOCUMENT(\n\r       :FkEmpresas, :FkTipoDocumentos)"
	EstqArqSql_SqlGetPkLotacao,	"select Max(PK_LOTACOES) as FK_LOTACOES \n\r  from LOTACOES \n\r where FK_EMPRESAS      = :FkEmpresas \n\r   and FK_ALMOXARIFADOS = :FkAlmoxarifados \n\r   and RUA_LOT          = :RuaLot \n\r   and NIVEL_LOT        = :NivelLot \n\r   and BOX_LOT          = :BoxLot"
	EstqArqSql_SqlGetNumberDocument,	"select PK_REQUISICOES \n\r  from REQUISICOES \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and FK_TIPO_DOCUMENTOS = :FkTipoDocumentos \n\r   and NUM_DOC            = :NumDoc"
	EstqArqSql_SqlSelectPkProduto,	"select R_PK_PRODUTOS as PK_PRODUTOS \n\r  from STP_GET_PK_PRODUTOS"
	EstqArqSql_SqlAllEstqParams,	"select Emp.PK_EMPRESAS, Emp.RAZ_SOC, Prm.FK_EMPRESAS \n\r  from EMPRESAS Emp \n\r  left outer join PARAMETROS_ESTQ Prm \n\r    on Prm.FK_EMPRESAS = Emp.PK_EMPRESAS \n\r  order by Emp.RAZ_SOC"
	EstqArqSql_SqlParamEstq,	"select * from PARAMETROS_ESTQ \n\r where FK_EMPRESAS = :FkEmpresas "
	EstqArqSql_SqlDeleteParamEstq,	"delete from PARAMETROS_ESTQ \n\r where FK_EMPRESAS = :FkEmpresas "
END


/* VER150
  Generated by the Borland Delphi Pascal Compiler
  because -GD or --drc was supplied to the compiler.

  This file contains compiler-generated resources that
  were bound to the executable.
  If this file is empty, then no compiler-generated
  resources were bound to the produced executable.
*/

#define ChangePgto_SChangeStatus 65472
#define ChangePgto_SChangePgtos 65473
#define ChangePgto_SNewPgtos 65474
#define SrvArqSql_SqlGetMaterial 65488
#define SrvArqSql_SqlGetServices 65489
#define SrvArqSql_SqlDocumentos 65490
#define SrvArqSql_SqlUnidades 65491
#define SrvArqSql_SqlPaises 65492
#define SrvArqSql_SqlEstados 65493
#define SrvArqSql_SqlMunicipios 65494
#define SrvArqSql_SqlFornecedores 65495
#define SrvArqSql_SqlClientes 65496
#define SrvArqSql_SqlService 65497
#define SrvArqSql_SqlMaterial 65498
#define SrvArqSql_SqlTipoPgtos 65499
#define mSysSrv_sFormatDate 65500
#define mSysSrv_sFormatTime 65501
#define mSysSrv_sFormatDateTime 65502
#define CnsCash_STotalFlowMsg 65503
#define SrvArqSql_SqlOSItens 65504
#define SrvArqSql_SqlUpdateOS 65505
#define SrvArqSql_SqlInsertOS 65506
#define SrvArqSql_SqlDeleteSOItems 65507
#define SrvArqSql_SqlInsertSOItems 65508
#define SrvArqSql_SqlInsertSOItemsLo 65509
#define SrvArqSql_SqlInsertSOItmIns 65510
#define SrvArqSql_SqlServices 65511
#define SrvArqSql_SqlServiceOrderHst 65512
#define SrvArqSql_SqlDeleteHistorics 65513
#define SrvArqSql_SqlInsertHistorics 65514
#define SrvArqSql_SqlParametrosSrv 65515
#define SrvArqSql_SqlInsPrevFinance 65516
#define SrvArqSql_SqlLancamentosCta 65517
#define SrvArqSql_SqlClassificaCRDB 65518
#define SrvArqSql_SqlClassification 65519
#define SrvArqSql_SqlGetKeyForRodov 65520
#define SrvArqSql_SqlGetKeyForPraca 65521
#define SrvArqSql_SqlGetKcLimites 65522
#define SrvArqSql_SqlGetKcTipoStatus 65523
#define SrvArqSql_SqlRodovias 65524
#define SrvArqSql_SqlPracas 65525
#define SrvArqSql_SqlTiposOS 65526
#define SrvArqSql_SqlStatusOS 65527
#define SrvArqSql_SqlGetKcOS 65528
#define SrvArqSql_SqlUpdateStatusOS 65529
#define SrvArqSql_SqlServiceOrder 65530
#define SrvArqSql_SqlServiceOrderItm 65531
#define SrvArqSql_SqlOSItemsInsumos1 65532
#define SrvArqSql_SqlOS 65533
#define SrvArqSql_SqlAnd 65534
#define SrvArqSql_SqlOrderOS 65535
STRINGTABLE
BEGIN
	ChangePgto_SChangeStatus,	"Troca de Status de %s para %s"
	ChangePgto_SChangePgtos,	"Alterada a Condição de Pagamentos de %s para %s"
	ChangePgto_SNewPgtos,	"Liberação da Condição de Pagamentos"
	SrvArqSql_SqlGetMaterial,	"select Prd.PK_PRODUTOS, Cast(Prd.DSC_PROD || ' ==> ' \n\r       || Uni.MNMO_UNI as varchar(60)) as DSC_PROD, \n\r       Pcp.VLR_UNIT, 0.0 as QTD_PROD, Pcd.COD_REF, \n\r       Uni.FLAG_QTD, Uni.FLAG_ALT, Uni.FLAG_LARG, \n\r       Uni.FLAG_COMP, 0 as SEQ_INS, Prd.QTD_UNI \n\r  from PRODUTOS_COMPRAS Pcp \n\r  join PRODUTOS Prd \n\r    on Prd.PK_PRODUTOS = Pcp.FK_PRODUTOS \n\r   and Prd.FLAG_ATV    = :FlagAtivo \n\r  join UNIDADES Uni \n\r    on Uni.PK_UNIDADES = Prd.FK_UNIDADES \n\r  left outer join PRODUTOS_CODIGOS Pcd \n\r    on Pcd.FK_PRODUTOS = Prd.PK_PRODUTOS \n\r   and Pcd.FLAG_TCODE  = :FlagTCode \n\r order by Prd.DSC_PROD"
	SrvArqSql_SqlGetServices,	"select Prd.PK_PRODUTOS, Cast(Prd.DSC_PROD || ' ==> ' \n\r       || Uni.MNMO_UNI as varchar(60)) as DSC_PROD, \n\r       Psv.VLR_UNIT, 0.0 as QTD_PROD, Pcd.COD_REF, \n\r       Uni.FLAG_QTD, Uni.FLAG_ALT, Uni.FLAG_LARG, \n\r       Uni.FLAG_COMP, 0 as SEQ_COMP, Prd.QTD_UNI \n\r  from PRODUTOS_SERVICOS Psv \n\r  join PRODUTOS Prd \n\r    on Prd.PK_PRODUTOS = Psv.FK_PRODUTOS \n\r   and Prd.FLAG_ATV    = :FlagAtivo \n\r  join UNIDADES Uni \n\r    on PK_UNIDADES     = Prd.FK_UNIDADES \n\r  left outer join PRODUTOS_CODIGOS Pcd \n\r    on Pcd.FK_PRODUTOS = Prd.PK_PRODUTOS \n\r   and Pcd.FLAG_TCODE  = :FlagTCode \n\r where Psv.FLAG_ATV    = :FlagAtv \n\r order by Prd.DSC_PROD"
	SrvArqSql_SqlDocumentos,	"select * from TIPO_DOCUMENTOS \n\r where FLAG_TDOC = 2 \n\r order by DSC_TDOC"
	SrvArqSql_SqlUnidades,	"select * from UNIDADES order by DSC_UNI"
	SrvArqSql_SqlPaises,	"select * from PAISES order by DSC_PAIS"
	SrvArqSql_SqlEstados,	"select * from ESTADOS \n\r where FK_PAISES = :FkPaises \n\r order by DSC_UF"
	SrvArqSql_SqlMunicipios,	"select * from MUNICIPIOS \n\r where FK_PAISES  = :FkPaises \n\r   and FK_ESTADOS = :FkEstados \n\r order by DSC_MUN"
	SrvArqSql_SqlFornecedores,	"select * from VW_FORNECEDORES \n\r order by RAZ_SOC"
	SrvArqSql_SqlClientes,	"select * from VW_CLIENTES \n\r order by RAZ_SOC"
	SrvArqSql_SqlService,	"select Cmp.PK_COMPOSICOES, Srv.DSC_SRV, Cmp.QTD_COMP, \n\r       0 as VLR_UNIT, 0 as VLR_TOT, 0 as KM_INI, \n\r       0 as KM_FIN \n\r  from COMPOSICOES Cmp, SERVICOS_IND Srv \n\r where Cmp.FK_TIPO_COMPOSICOES = :FkTipoComposicoes \n\r   and Cmp.FK_SERVICOS_IND     = :Insumo \n\r   and Srv.PK_SERVICOS_IND     = Cmp.FK_SERVICOS_IND"
	SrvArqSql_SqlMaterial,	"select Cmp.PK_COMPOSICOES, Ins.DSC_INS, Cmp.QTD_COMP, \n\r       0 as VLR_UNIT, 0 as VLR_TOT, 0 as KM_INI, \n\r       0 as KM_FIN \n\r  from COMPOSICOES Cmp, INSUMOS Ins \n\r where Cmp.FK_TIPO_COMPOSICOES = :FkTipoComposicoes \n\r   and Cmp.FK_INSUMOS          = :Insumo \n\r   and Ins.PK_INSUMOS          = Cmp.FK_INSUMOS"
	SrvArqSql_SqlTipoPgtos,	"select * from TIPO_PAGAMENTOS \n\r where ((FK_GRUPOS_MOVIMENTOS = :FkGruposMovimentos) \n\r    or  (0                    = :FkGruposMovimentos)) "
	mSysSrv_sFormatDate,	"mm-dd-yyyy"
	mSysSrv_sFormatTime,	"hh:mm:ss"
	mSysSrv_sFormatDateTime,	"mm-dd-yyyy hh:mm:ss"
	CnsCash_STotalFlowMsg,	"Total do Período Somando Realizado e Previsto: %m"
	SrvArqSql_SqlOSItens,	"select Osi.PK_ORDENS_SERVICOS_ITENS, Prd.DSC_PROD, \n\r       'Quant.: ' || Cast(Osi.QTD_SRV as Varchar(20)) as DSC_QTD, \n\r       'Fatur.: ' || Cast(Osi.DTA_FAT as Varchar(10)) as DSC_FAT, \n\r       Osi.TOT_SRV \n\r  from ORDENS_SERVICOS_ITENS Osi, PRODUTOS Prd \n\r where Osi.FK_EMPRESAS          = :FkEmpresas \n\r   and Osi.FK_ORDENS_SERVICOS   = :FkOrdensServicos \n\r   and Prd.PK_PRODUTOS          = Osi.FK_PRODUTOS_SERVICOS \n\r order by PK_ORDENS_SERVICOS_ITENS"
	SrvArqSql_SqlUpdateOS,	"update ORDENS_SERVICOS set \n\r       FK_CADASTROS            = :FkCadastros, \n\r       FK_RODOVIAS             = :FkRodovias, \n\r       FK_TIPO_ORDENS_SERVICOS = :FkTipoOrdensServicos, \n\r       FK_TIPO_STATUS_OS       = :FkTipoStatusOS, \n\r       FK_GRUPOS_MOVIMENTOS    = :FkGruposMovimentos, \n\r       FK_TIPO_MOVIMENTOS      = :FkTipoMovimentos, \n\r       DSC_ORD      = :DscOrd, \n\r       DTA_INI      = :DtaIni, \n\r       DTA_FIN      = :DtaFin, \n\r       SUB_TOT      = :SubTot, \n\r       VLR_ACR_DSCT = :VlrAcrDsct, \n\r       TOT_ORD      = :TotOrd, \n\r       QTD_ITEMS    = :QtdItems, \n\r       KEY_ITEMS    = :KeyItems, \n\r       DTA_APR      = :DtaApr, \n\r       DTA_OS       = :DtaOS, \n\r       DTA_CANC     = :DtaCanc, \n\r       DTA_LIQ      = :DtaLiq, \n\r       DTA_BLQ      = :DtaBlq, \n\r       COD_AUT      = :CodAut, \n\r       FK_TIPO_PAGAMENTOS = :FkTipoPagamentos, \n\r       LST_PRZ      = :LstPrz,  \n\r       DTA_LIB_FIN  = :DtaLibFin \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and PK_ORDENS_SERVICOS = :PkOrdensServicos"
	SrvArqSql_SqlInsertOS,	"insert into ORDENS_SERVICOS \n\r  (FK_EMPRESAS, PK_ORDENS_SERVICOS, FK_CADASTROS, \n\r   FK_TIPO_ORDENS_SERVICOS, FK_TIPO_STATUS_OS, \n\r   FK_GRUPOS_MOVIMENTOS, FK_TIPO_MOVIMENTOS, DTA_OS, \n\r   SUB_TOT, VLR_ACR_DSCT, TOT_ORD, QTD_ITEMS, \n\r   KEY_ITEMS, FK_RODOVIAS, DTA_INI, DTA_FIN, \n\r   DSC_ORD, COD_AUT, FK_TIPO_PAGAMENTOS, DTA_LIB_FIN, \n\r   LST_PRZ, DTA_APR, DTA_LIQ, DTA_CANC, DTA_BLQ) \n\rvalues \n\r  (:FkEmpresas, :PkOrdensServicos, :FkCadastros, \n\r   :FkTipoOrdensServicos, :FkTipoStatusOS, \n\r   :FkGruposMovimentos, :FkTipoMovimentos, :DtaOS, \n\r   :SubTot, :VlrAcrDsct, :TotOrd, :QtdItems, \n\r   :KeyItems, :FkRodovias, :DtaIni, :DtaFin, \n\r   :DscOrd, :CodAut, :FkTipoPagamentos, :DtaLibFin, \n\r   :LstPrz, :DtaApr, :DtaLiq, :DtaCanc, :DtaBlq) "
	SrvArqSql_SqlDeleteSOItems,	"delete from ORDENS_SERVICOS_ITENS \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and FK_ORDENS_SERVICOS = :FkOrdensServicos "
	SrvArqSql_SqlInsertSOItems,	"insert into ORDENS_SERVICOS_ITENS \n\r  (FK_EMPRESAS, FK_ORDENS_SERVICOS, \n\r   PK_ORDENS_SERVICOS_ITENS, FK_PRODUTOS_SERVICOS, \n\r   FK_CLASSIFICACAO, FLAG_PERS, QTD_SRV, VLR_UNIT, \n\r   TOT_SRV, FLAG_TQTD, ALT_SRV, LARG_SRV, \n\r   COMP_SRV, DTA_FAT) \n\rvalues \n\r  (:FkEmpresas, :FkOrdensServicos, \n\r   :PkOrdensServicosItens, :FkProdutosServicos, \n\r   :FkClassificacao, :FlagPers, :QtdSrv, :VlrUnit, \n\r   :TotSrv, :FlagTQtd, :AltSrv, :LargSrv, \n\r   :CompSrv, :DtaFat)"
	SrvArqSql_SqlInsertSOItemsLo,	"insert into ORDENS_SERVICOS_ITENS_LOCAL \n\r  (FK_EMPRESAS, FK_ORDENS_SERVICOS, \n\r   FK_ORDENS_SERVICOS_ITENS, LOC_INI, \n\r   LOC_FIN, FLAG_SIDE) \n\rvalues \n\r  (:FkEmpresas, :FkOrdensServicos, \n\r   :FkOrdensServicosItens, :LocIni, \n\r   :LocFin, :FlagSide)"
	SrvArqSql_SqlInsertSOItmIns,	"insert into ORDENS_SERVICOS_ITENS_INSUMO \n\r  (FK_EMPRESAS, FK_ORDENS_SERVICOS, \n\r   FK_OS_ITENS, SEQ_ITEM, FK_INSUMO, FLAG_TINS, \n\r   QTD_INS, ALT_INS, LARG_INS, COMP_INS, FLAG_FRN, \n\r   FLAG_TQTD, VLR_UNIT) \n\rvalues \n\r  (:FkEmpresas, :FkOrdensServicos, :FkOsItens, \n\r   :SeqItem, :FkInsumo, :FlagTIns, :QtdIns, \n\r   :AltIns, :LargIns, :CompIns, :FlagFrn, \n\r   :FlagTQtd, :VlrUnit)"
	SrvArqSql_SqlServices,	"select * from STP_GET_SERVICES_WITH_INSUMOS "
	SrvArqSql_SqlServiceOrderHst,	"select Oht.*, Tso.DSC_STT, Tso.FLAG_STT, Tso.FLAG_AUT,  \n\r       Cad.RAZ_SOC  \n\r  from OS_HISTORICOS Oht  \n\r  left outer join TIPO_STATUS_OS Tso  \n\r    on Tso.PK_TIPO_STATUS_OS  = Oht.FK_TIPO_STATUS_OS  \n\r  left outer join CADASTROS Cad  \n\r    on Cad.PK_CADASTROS       = Oht.COD_AUT  \n\r where Oht.FK_EMPRESAS        = :FkEmpresas  \n\r   and Oht.FK_ORDENS_SERVICOS = :FkOrdensServicos"
	SrvArqSql_SqlDeleteHistorics,	"delete from OS_HISTORICOS \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and FK_ORDENS_SERVICOS = :FkOrdensServicos"
	SrvArqSql_SqlInsertHistorics,	"insert into OS_HISTORICOS \n\r (FK_EMPRESAS, FK_ORDENS_SERVICOS, PK_OS_HISTORICOS, \n\r  FK_TIPO_STATUS_OS, DTA_HIST, COD_AUT, DSC_HIST, \n\r  FK_ORDENS_SERVICOS_ITENS, SEQ_INS) \n\rvalues \n\r (:FkEmpresas, :FkOrdensServicos, :PkOSHistoricos, \n\r  :FkTipoStatusOS, :DtaHist, :CodAut, :DscHist, \n\r  :FkOrdensServicosItens, :SeqIns)"
	SrvArqSql_SqlParametrosSrv,	"select * from PARAMETROS_SRV \n\r where FK_EMPRESAS = :FkEmpresas"
	SrvArqSql_SqlInsPrevFinance,	"select R_STATUS from STP_INSERT_PREVISION_FROM_OS \n\r       (:FkEmpresas, :FkTipoOrdensServicos, \n\r        :PkOrdensServicos, :DtaVenc, :VlrLan, \n\r        :NumParc, :TotParc, :QtdParc)"
	SrvArqSql_SqlLancamentosCta,	"select Cln.DTA_LAN, Cln.DSC_LAN, Cln.VLR_LAN, \n\r       Csl.SLD_CTA as SLD_LAN, Cad.RAZ_SOC, \n\r       Cln.FLAG_DBCR, Cta.DSC_CTA, Cta.SLD_CTA, \n\r       Cta.FK_EMPRESAS, Cta.FK_TIPO_CONTAS, \n\r       Cta.PK_CONTAS \n\r  from TIPO_CONTAS Tct \n\r  join CONTAS Cta \n\r    on Cta.FK_EMPRESAS      = :FkEmpresas \n\r   and Cta.FK_TIPO_CONTAS   = Tct.PK_TIPO_CONTAS \n\r  left outer join CONTAS_LANCAMENTOS Cln \n\r    on Cln.FK_EMPRESAS      = Cta.FK_EMPRESAS \n\r   and Cln.FK_TIPO_CONTAS   = Cta.FK_TIPO_CONTAS \n\r   and Cln.FK_CONTAS        = Cta.PK_CONTAS \n\r   and Cln.DTA_LAN         >= :StartDate \n\r   and Cln.DTA_LAN         <= :EndDate \n\r  left outer join CONTAS_SALDOS Csl \n\r    on Csl.FK_EMPRESAS      = Cln.FK_EMPRESAS \n\r   and Csl.FK_TIPO_CONTAS   = Cln.FK_TIPO_CONTAS \n\r   and Csl.FK_CONTAS        = Cln.FK_CONTAS \n\r   and Csl.PK_CONTAS_SALDOS = Cln.DTA_LAN \n\r  left outer join CADASTROS Cad \n\r    on Cad.PK_CADASTROS     = Cln.FK_CADASTROS \n\r where Tct.PK_TIPO_CONTAS   > 0 \n\r   and Tct.FLAG_TCTA        = :FlagTCta \n\r order by Cta.DSC_CTA, Cln.DTA_LAN desc"
	SrvArqSql_SqlClassificaCRDB,	"select * from STP_GET_CLASSIFICACAO \n\r where R_FLAG_TCTA = :FlagTCta"
	SrvArqSql_SqlClassification,	"select * from STP_GET_CLASSIFICACAO"
	SrvArqSql_SqlGetKeyForRodov,	"select R_PK_RODOVIAS \n\r  from STP_GET_KEY_FOR_RODOVIAS(:FkEmpresas)"
	SrvArqSql_SqlGetKeyForPraca,	"select R_PK_PRACAS \r  from STP_GET_KEY_FOR_PRACAS(:FkEmpresas)"
	SrvArqSql_SqlGetKcLimites,	"select R_PK_LIMITES_MUNICIPIOS \n\r  from STP_GET_KC_LIMITES_MUNICIPIOS(:FkEmpresas, :FkRodovias)"
	SrvArqSql_SqlGetKcTipoStatus,	"select R_PK_LIMITES_MUNICIPIOS \n\r  from STP_GET_KC_LIMITES_MUNICIPIOS(:FkEmpresas, :FkRodovias)"
	SrvArqSql_SqlRodovias,	"select * from RODOVIAS \n\r where FK_EMPRESAS = :FkEmpresas \n\r order by DSC_ROD"
	SrvArqSql_SqlPracas,	"select * from PRACAS \n\r where FK_EMPRESAS = :FkEmpresas \n\r order by DSC_PRC"
	SrvArqSql_SqlTiposOS,	"select Tos.PK_TIPO_ORDENS_SERVICOS, Tos.FLAG_TOS, Gmv.FLAG_ES, \n\r       Gmv.FLAG_COD, Gmv.FLAG_GFIN, Tmv.PK_TIPO_MOVIMENTOS, \n\r       Tmv.FLAG_CNS, Tos.FK_TIPO_DOCUMENTOS, Tmv.FLAG_LDV, \n\r       Tos.DSC_TOS || ' ==> ' ||Tmv.DSC_TMOV as DSC_TOS, \n\r       Gmv.PK_GRUPOS_MOVIMENTOS \n\r  from grupos_movimentos Gmv, tipo_movimentos Tmv, \n\r       tipo_ordens_servicos Tos \n\r where Tmv.FK_GRUPOS_MOVIMENTOS = Gmv.PK_GRUPOS_MOVIMENTOS \n\r   and Tos.FK_GRUPOS_MOVIMENTOS = Gmv.PK_GRUPOS_MOVIMENTOS \n\r order by Tos.DSC_TOS, Tmv.DSC_TMOV"
	SrvArqSql_SqlStatusOS,	"select * from TIPO_STATUS_OS \n\r order by DSC_STT"
	SrvArqSql_SqlGetKcOS,	"select R_PK_ORDENS_SERVICOS \n\r  from STP_GET_PK_ORDENS_SERVICOS(:FkEmpresas, :FkTipoDocumentos)"
	SrvArqSql_SqlUpdateStatusOS,	"update ORDENS_SERVICOS set \n\r       FK_TIPO_STATUS_OS  = :FkTipoStatusOS \n\r where FK_EMPRESAS        = :FkEmpresas \n\r   and PK_ORDENS_SERVICOS = :PkOrdensServicos"
	SrvArqSql_SqlServiceOrder,	"select Ors.*, Tpg.DSC_TPG, Tos.FLAG_TOS \n\r  from ORDENS_SERVICOS Ors \n\r  left outer join TIPO_PAGAMENTOS Tpg \n\r    on Tpg.PK_TIPO_PAGAMENTOS = Ors.FK_TIPO_PAGAMENTOS \n\r  left outer join TIPO_ORDENS_SERVICOS Tos \n\r    on Tos.PK_TIPO_ORDENS_SERVICOS = Ors.FK_TIPO_ORDENS_SERVICOS \n\r where Ors.FK_EMPRESAS        = :FkEmpresas \n\r   and Ors.PK_ORDENS_SERVICOS = :PkOrdensServicos"
	SrvArqSql_SqlServiceOrderItm,	"select Osi.PK_ORDENS_SERVICOS_ITENS, Prd.DSC_PROD, \n\r       Osi.VLR_UNIT, Osi.TOT_SRV, Osi.QTD_SRV, \n\r       Osl.LOC_INI, Osl.LOC_FIN, Osi.DTA_FAT, \n\r       Osi.FK_PRODUTOS_SERVICOS, Osi.FK_CLASSIFICACAO, \n\r       Osi.FLAG_PERS, Osl.FLAG_SIDE, Osi.FLAG_TQTD, \n\r       Osi.LARG_SRV, Osi.ALT_SRV, Osi.COMP_SRV \n\r  from ORDENS_SERVICOS_ITENS Osi \n\r  left outer join PRODUTOS Prd \n\r    on Prd.PK_PRODUTOS              = Osi.FK_PRODUTOS_SERVICOS \n\r  left outer join ORDENS_SERVICOS_ITENS_LOCAL Osl \n\r    on Osl.FK_EMPRESAS              = Osi.FK_EMPRESAS \n\r   and Osl.FK_ORDENS_SERVICOS       = Osi.FK_ORDENS_SERVICOS \n\r   and Osl.FK_ORDENS_SERVICOS_ITENS = Osi.PK_ORDENS_SERVICOS_ITENS \n\r where Osi.FK_EMPRESAS              = :FkEmpresas \n\r   and Osi.FK_ORDENS_SERVICOS       = :FkOrdensServicos \n\r order by Osi.FK_EMPRESAS, Osi.FK_ORDENS_SERVICOS, \n\r          Osi.PK_ORDENS_SERVICOS_ITENS"
	SrvArqSql_SqlOSItemsInsumos1,	"select distinct Oin.SEQ_ITEM, Prd.DSC_PROD, \n\r       Oin.ALT_INS, Oin.LARG_INS, Oin.COMP_INS, \n\r       Oin.FK_INSUMO,  Oin.FLAG_TINS, Oin.QTD_INS, \n\r       Oin.FLAG_FRN, Oin.FLAG_TQTD, Oin.VLR_UNIT \n\r  from ORDENS_SERVICOS_ITENS_INSUMO Oin \n\r  left outer join ORDENS_SERVICOS_ITENS Oit \n\r    on Oit.FK_EMPRESAS         = Oin.FK_EMPRESAS \n\r   and Oit.FK_ORDENS_SERVICOS  = Oin.FK_ORDENS_SERVICOS \n\r   and Oit.PK_ORDENS_SERVICOS_ITENS = Oin.FK_OS_ITENS \n\r  left outer join PRODUTOS Prd \n\r    on Prd.PK_PRODUTOS         = Oin.FK_INSUMO \n\r where Oin.FK_EMPRESAS         = :FkEmpresas \n\r   and Oin.FK_ORDENS_SERVICOS  = :FkOrdensServicos \n\r   and Oin.FK_OS_ITENS         = :FkOSItens \n\r order by Oin.FK_EMPRESAS, Oin.FK_ORDENS_SERVICOS, \n\r          Oin.FK_OS_ITENS, Oin.SEQ_ITEM "
	SrvArqSql_SqlOS,	"select Ors.PK_ORDENS_SERVICOS, Cad.RAZ_SOC, Ors.DSC_ORD, \n\r       Tst.DSC_STT, Ors.TOT_ORD, Ors.FK_TIPO_STATUS_OS, \n\r       Ors.FK_TIPO_PAGAMENTOS, Tpg.DSC_TPG, Ors.DTA_OS, \n\r       Ors.LST_PRZ \n\r  from ORDENS_SERVICOS Ors  \n\r  join CADASTROS Cad \n\r    on Cad.PK_CADASTROS       = Ors.FK_CADASTROS \n\r  join TIPO_STATUS_OS Tst \n\r    on Tst.PK_TIPO_STATUS_OS  = Ors.FK_TIPO_STATUS_OS \n\r  left outer join TIPO_PAGAMENTOS Tpg \n\r    on Tpg.PK_TIPO_PAGAMENTOS = Ors.FK_TIPO_PAGAMENTOS \n\r where Ors.FK_EMPRESAS        = :FkEmpresas \n\r"
	SrvArqSql_SqlAnd,	"   and "
	SrvArqSql_SqlOrderOS,	" order by Ors.DTA_OS, Ors.PK_ORDENS_SERVICOS"
END

